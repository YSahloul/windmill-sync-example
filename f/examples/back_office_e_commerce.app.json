{
  "value": {
    "css": {
      "app": {
        "grid": {
          "class": "",
          "style": ""
        },
        "viewer": {
          "class": "",
          "style": ""
        },
        "component": {
          "class": "",
          "style": ""
        }
      },
      "mapcomponent": {
        "map": {
          "class": "",
          "style": ""
        }
      },
      "formcomponent": {
        "button": {
          "class": "",
          "style": ""
        },
        "container": {
          "class": "",
          "style": ""
        }
      },
      "htmlcomponent": {
        "container": {
          "class": "",
          "style": ""
        }
      },
      "iconcomponent": {
        "icon": {
          "class": "",
          "style": ""
        },
        "container": {
          "class": "",
          "style": ""
        }
      },
      "tabscomponent": {
        "tabRow": {
          "class": "",
          "style": ""
        },
        "allTabs": {
          "class": "",
          "style": ""
        },
        "container": {
          "class": "",
          "style": ""
        },
        "selectedTab": {
          "class": "",
          "style": ""
        }
      },
      "textcomponent": {
        "text": {
          "class": "",
          "style": ""
        }
      },
      "imagecomponent": {
        "image": {
          "class": "",
          "style": ""
        }
      },
      "rangecomponent": {
        "limits": {
          "class": "",
          "style": ""
        },
        "values": {
          "class": "",
          "style": ""
        },
        "handles": {
          "style": ""
        }
      },
      "tablecomponent": {
        "container": {
          "class": "",
          "style": ""
        },
        "tableBody": {
          "class": "",
          "style": ""
        },
        "tableFooter": {
          "class": "",
          "style": ""
        },
        "tableHeader": {
          "class": "",
          "style": ""
        }
      },
      "aggridcomponent": {},
      "buttoncomponent": {
        "button": {
          "class": "",
          "style": ""
        }
      },
      "drawercomponent": {},
      "plotlycomponent": {},
      "selectcomponent": {
        "input": {
          "style": ""
        }
      },
      "slidercomponent": {
        "value": {
          "class": "",
          "style": ""
        },
        "handle": {
          "style": ""
        },
        "limits": {
          "class": "",
          "style": ""
        }
      },
      "displaycomponent": {
        "header": {
          "class": "",
          "style": ""
        },
        "container": {
          "class": "",
          "style": ""
        }
      },
      "barchartcomponent": {
        "container": {
          "class": "",
          "style": ""
        }
      },
      "checkboxcomponent": {
        "text": {
          "class": "",
          "style": ""
        }
      },
      "currencycomponent": {
        "input": {
          "class": "",
          "style": ""
        }
      },
      "piechartcomponent": {
        "container": {
          "class": "",
          "style": ""
        }
      },
      "vegalitecomponent": {},
      "containercomponent": {
        "container": {
          "class": "",
          "style": ""
        }
      },
      "dateinputcomponent": {
        "input": {
          "class": "",
          "style": ""
        }
      },
      "fileinputcomponent": {
        "container": {
          "class": "",
          "style": ""
        }
      },
      "textinputcomponent": {
        "input": {
          "class": "",
          "style": ""
        }
      },
      "formbuttoncomponent": {
        "popup": {
          "class": "",
          "style": ""
        },
        "button": {
          "class": "",
          "style": ""
        }
      },
      "timeseriescomponent": {
        "container": {
          "class": "",
          "style": ""
        }
      },
      "multiselectcomponent": {
        "input": {
          "style": ""
        }
      },
      "numberinputcomponent": {
        "input": {
          "class": "",
          "style": ""
        }
      },
      "scatterchartcomponent": {
        "container": {
          "class": "",
          "style": ""
        }
      },
      "passwordinputcomponent": {
        "input": {
          "class": "",
          "style": ""
        }
      },
      "verticaldividercomponent": {
        "divider": {
          "class": "",
          "style": ""
        },
        "container": {
          "class": "",
          "style": ""
        }
      },
      "horizontaldividercomponent": {
        "divider": {
          "class": "",
          "style": ""
        },
        "container": {
          "class": "",
          "style": ""
        }
      },
      "verticalsplitpanescomponent": {
        "container": {
          "class": "",
          "style": ""
        }
      },
      "horizontalsplitpanescomponent": {
        "container": {
          "class": "",
          "style": ""
        }
      }
    },
    "grid": [
      {
        "3": {
          "h": 1,
          "w": 1,
          "x": 0,
          "y": 8,
          "fixed": false
        },
        "12": {
          "h": 1,
          "w": 12,
          "x": 0,
          "y": 0,
          "id": "c",
          "fixed": false
        },
        "id": "c",
        "data": {
          "id": "c",
          "type": "textcomponent",
          "customCss": {
            "text": {
              "class": "",
              "style": "color: #177cc8;"
            }
          },
          "configuration": {
            "style": {
              "type": "static",
              "value": "Body"
            },
            "tooltip": {
              "type": "static",
              "value": ""
            },
            "copyButton": {
              "type": "static",
              "value": false
            }
          },
          "componentInput": {
            "eval": "Note: all editing actions have been disabled in the present example as they would affect parent database.",
            "type": "template",
            "value": "Hello ${ctx.username}",
            "fieldType": "template"
          },
          "verticalAlignment": "top",
          "horizontalAlignment": "left"
        }
      },
      {
        "3": {
          "h": 1,
          "w": 1,
          "x": 1,
          "y": 8,
          "fixed": false
        },
        "12": {
          "h": 1,
          "w": 12,
          "x": 0,
          "y": 1,
          "id": "f",
          "fixed": false
        },
        "id": "f",
        "data": {
          "id": "f",
          "type": "textcomponent",
          "customCss": {
            "text": {
              "class": "",
              "style": ""
            }
          },
          "configuration": {
            "style": {
              "type": "static",
              "value": "Body"
            },
            "tooltip": {
              "type": "static",
              "value": ""
            },
            "copyButton": {
              "type": "static",
              "value": false
            }
          },
          "componentInput": {
            "eval": "Tutorial: https://docs.windmill.dev/docs/apps/app_e-commerce",
            "type": "template",
            "value": "Hello ${ctx.username}",
            "fieldType": "template"
          },
          "verticalAlignment": "top",
          "horizontalAlignment": "left"
        }
      },
      {
        "3": {
          "h": 8,
          "w": 2,
          "x": 0,
          "y": 0,
          "max": {
            "h": 100,
            "w": 3
          },
          "min": {
            "h": 1,
            "w": 1
          },
          "fixed": true,
          "draggable": true,
          "resizable": true,
          "customDragger": false,
          "customResizer": false
        },
        "12": {
          "h": 22,
          "w": 12,
          "x": 0,
          "y": 2,
          "id": "a",
          "max": {
            "h": 100,
            "w": 12
          },
          "min": {
            "h": 1,
            "w": 1
          },
          "fixed": true,
          "draggable": true,
          "resizable": true,
          "customDragger": false,
          "customResizer": false
        },
        "id": "a",
        "data": {
          "id": "a",
          "card": false,
          "tabs": [
            "Products",
            "Orders",
            "Users",
            "Manuel order"
          ],
          "type": "tabscomponent",
          "softWrap": true,
          "customCss": {
            "tabRow": {
              "class": "",
              "style": ""
            },
            "allTabs": {
              "class": "",
              "style": ""
            },
            "container": {
              "class": "",
              "style": ""
            },
            "selectedTab": {
              "class": "",
              "style": ""
            }
          },
          "configuration": {
            "tabsKind": {
              "type": "static",
              "value": null
            },
            "noPadding": {
              "type": "static",
              "value": true,
              "fieldType": "boolean",
              "onlyStatic": true
            }
          },
          "numberOfSubgrids": 4
        }
      }
    ],
    "subgrids": {
      "a-0": [
        {
          "3": {
            "h": 1,
            "w": 1,
            "x": 0,
            "y": 0,
            "max": {
              "h": 100,
              "w": 3
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": true,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "12": {
            "h": 1,
            "w": 2,
            "x": 10,
            "y": 0,
            "id": "b",
            "max": {
              "h": 100,
              "w": 12
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": true,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "id": "b",
          "data": {
            "id": "b",
            "card": false,
            "type": "drawercomponent",
            "softWrap": true,
            "configuration": {
              "size": {
                "type": "static",
                "value": "xs",
                "fieldType": "select",
                "onlyStatic": true,
                "optionValuesKey": "buttonSizeOptions"
              },
              "color": {
                "type": "static",
                "value": "dark",
                "fieldType": "select",
                "onlyStatic": true,
                "optionValuesKey": "buttonColorOptions"
              },
              "label": {
                "type": "static",
                "value": "Add a new product",
                "fieldType": "text"
              },
              "disabled": {
                "expr": "false",
                "type": "eval",
                "fieldType": "boolean"
              },
              "noPadding": {
                "type": "static",
                "value": false,
                "fieldType": "boolean",
                "onlyStatic": true
              },
              "drawerTitle": {
                "type": "static",
                "value": "Drawer title",
                "fieldType": "text",
                "onlyStatic": true
              },
              "fillContainer": {
                "type": "static",
                "value": false,
                "fieldType": "boolean",
                "onlyStatic": true
              }
            },
            "numberOfSubgrids": 1,
            "verticalAlignment": "center",
            "horizontalAlignment": "right"
          }
        },
        {
          "3": {
            "h": 8,
            "w": 2,
            "x": 1,
            "y": 0,
            "max": {
              "h": 100,
              "w": 3
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": true,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "12": {
            "h": 19,
            "w": 12,
            "x": 0,
            "y": 1,
            "id": "i",
            "max": {
              "h": 100,
              "w": 12
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": true,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "id": "i",
          "data": {
            "id": "i",
            "card": false,
            "type": "verticalsplitpanescomponent",
            "panes": [
              60,
              40
            ],
            "softWrap": true,
            "customCss": {
              "container": {
                "class": "",
                "style": ""
              }
            },
            "configuration": {
              "noPadding": {
                "type": "static",
                "value": true,
                "fieldType": "boolean",
                "onlyStatic": true
              }
            },
            "numberOfSubgrids": 2
          }
        }
      ],
      "a-1": [
        {
          "3": {
            "h": 8,
            "w": 2,
            "x": 0,
            "y": 0,
            "max": {
              "h": 100,
              "w": 3
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "12": {
            "h": 20,
            "w": 12,
            "x": 0,
            "y": 0,
            "id": "d",
            "max": {
              "h": 100,
              "w": 12
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "id": "d",
          "data": {
            "id": "d",
            "card": false,
            "tabs": [
              "List of orders",
              "Analytics",
              "Shipping map"
            ],
            "type": "tabscomponent",
            "softWrap": true,
            "customCss": {
              "tabRow": {
                "class": "",
                "style": ""
              },
              "allTabs": {
                "class": "",
                "style": ""
              },
              "container": {
                "class": "",
                "style": ""
              },
              "selectedTab": {
                "class": "",
                "style": ""
              }
            },
            "configuration": {
              "noPadding": {
                "type": "static",
                "value": true,
                "fieldType": "boolean",
                "onlyStatic": true
              }
            },
            "numberOfSubgrids": 3
          }
        }
      ],
      "a-2": [
        {
          "3": {
            "h": 8,
            "w": 2,
            "x": 0,
            "y": 10,
            "max": {
              "h": 100,
              "w": 3
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "12": {
            "h": 20,
            "w": 12,
            "x": 0,
            "y": 0,
            "id": "aw",
            "max": {
              "h": 100,
              "w": 12
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "id": "aw",
          "data": {
            "id": "aw",
            "card": false,
            "type": "verticalsplitpanescomponent",
            "panes": [
              50,
              50
            ],
            "softWrap": true,
            "customCss": {
              "container": {
                "class": "",
                "style": ""
              }
            },
            "configuration": {
              "noPadding": {
                "type": "static",
                "value": false,
                "fieldType": "boolean",
                "onlyStatic": true
              }
            },
            "numberOfSubgrids": 2
          }
        }
      ],
      "a-3": [
        {
          "3": {
            "h": 8,
            "w": 2,
            "x": 0,
            "y": 0,
            "max": {
              "h": 100,
              "w": 3
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "12": {
            "h": 20,
            "w": 12,
            "x": 0,
            "y": 0,
            "id": "al",
            "max": {
              "h": 100,
              "w": 12
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "id": "al",
          "data": {
            "id": "al",
            "card": false,
            "type": "verticalsplitpanescomponent",
            "panes": [
              60,
              40
            ],
            "softWrap": true,
            "customCss": {
              "container": {
                "class": "",
                "style": ""
              }
            },
            "configuration": {
              "noPadding": {
                "type": "static",
                "value": false,
                "fieldType": "boolean",
                "onlyStatic": true
              }
            },
            "numberOfSubgrids": 2
          }
        }
      ],
      "b-0": [
        {
          "3": {
            "h": 1,
            "w": 1,
            "x": 0,
            "y": 0,
            "max": {
              "h": 100,
              "w": 3
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "12": {
            "h": 1,
            "w": 12,
            "x": 0,
            "y": 0,
            "id": "s",
            "max": {
              "h": 100,
              "w": 12
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "id": "s",
          "data": {
            "id": "s",
            "card": false,
            "type": "textcomponent",
            "softWrap": false,
            "customCss": {
              "text": {
                "class": "",
                "style": ""
              }
            },
            "configuration": {
              "style": {
                "type": "static",
                "value": "Label",
                "fieldType": "select",
                "onlyStatic": true,
                "optionValuesKey": "textStyleOptions"
              },
              "copyButton": {
                "type": "static",
                "value": false,
                "fieldType": "boolean",
                "onlyStatic": true
              }
            },
            "componentInput": {
              "eval": "Name",
              "type": "template",
              "value": "Hello ${ctx.username}",
              "fieldType": "template"
            },
            "verticalAlignment": "center",
            "horizontalAlignment": "left"
          }
        },
        {
          "3": {
            "h": 1,
            "w": 2,
            "x": 1,
            "y": 0,
            "max": {
              "h": 100,
              "w": 3
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "12": {
            "h": 1,
            "w": 12,
            "x": 0,
            "y": 1,
            "id": "t",
            "max": {
              "h": 100,
              "w": 12
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "id": "t",
          "data": {
            "id": "t",
            "card": false,
            "type": "textinputcomponent",
            "softWrap": true,
            "customCss": {
              "input": {
                "class": "",
                "style": ""
              }
            },
            "configuration": {
              "placeholder": {
                "type": "static",
                "value": "Type...",
                "fieldType": "text",
                "onlyStatic": true
              },
              "defaultValue": {
                "type": "static",
                "fieldType": "text"
              }
            },
            "verticalAlignment": "center"
          }
        },
        {
          "3": {
            "h": 1,
            "w": 1,
            "x": 0,
            "y": 5,
            "max": {
              "h": 100,
              "w": 3
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "12": {
            "h": 1,
            "w": 12,
            "x": 0,
            "y": 2,
            "id": "v",
            "max": {
              "h": 100,
              "w": 12
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "id": "v",
          "data": {
            "id": "v",
            "card": false,
            "type": "textcomponent",
            "softWrap": false,
            "customCss": {
              "text": {
                "class": "",
                "style": ""
              }
            },
            "configuration": {
              "style": {
                "type": "static",
                "value": "Label",
                "fieldType": "select",
                "onlyStatic": true,
                "optionValuesKey": "textStyleOptions"
              },
              "copyButton": {
                "type": "static",
                "value": false,
                "fieldType": "boolean",
                "onlyStatic": true
              }
            },
            "componentInput": {
              "eval": "Description",
              "type": "template",
              "value": "Hello ${ctx.username}",
              "fieldType": "template"
            },
            "verticalAlignment": "center",
            "horizontalAlignment": "left"
          }
        },
        {
          "3": {
            "h": 1,
            "w": 2,
            "x": 1,
            "y": 5,
            "max": {
              "h": 100,
              "w": 3
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "12": {
            "h": 1,
            "w": 12,
            "x": 0,
            "y": 3,
            "id": "w",
            "max": {
              "h": 100,
              "w": 12
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "id": "w",
          "data": {
            "id": "w",
            "card": false,
            "type": "textinputcomponent",
            "softWrap": true,
            "customCss": {
              "input": {
                "class": "",
                "style": ""
              }
            },
            "configuration": {
              "placeholder": {
                "type": "static",
                "value": "Type...",
                "fieldType": "text",
                "onlyStatic": true
              },
              "defaultValue": {
                "type": "static",
                "fieldType": "text"
              }
            },
            "verticalAlignment": "center"
          }
        },
        {
          "3": {
            "h": 1,
            "w": 1,
            "x": 0,
            "y": 6,
            "max": {
              "h": 100,
              "w": 3
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "12": {
            "h": 1,
            "w": 12,
            "x": 0,
            "y": 4,
            "id": "x",
            "max": {
              "h": 100,
              "w": 12
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "id": "x",
          "data": {
            "id": "x",
            "card": false,
            "type": "textcomponent",
            "softWrap": false,
            "customCss": {
              "text": {
                "class": "",
                "style": ""
              }
            },
            "configuration": {
              "style": {
                "type": "static",
                "value": "Label",
                "fieldType": "select",
                "onlyStatic": true,
                "optionValuesKey": "textStyleOptions"
              },
              "copyButton": {
                "type": "static",
                "value": false,
                "fieldType": "boolean",
                "onlyStatic": true
              }
            },
            "componentInput": {
              "eval": "Quantity",
              "type": "template",
              "value": "Hello ${ctx.username}",
              "fieldType": "template"
            },
            "verticalAlignment": "center",
            "horizontalAlignment": "left"
          }
        },
        {
          "3": {
            "h": 1,
            "w": 2,
            "x": 1,
            "y": 6,
            "max": {
              "h": 100,
              "w": 3
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "12": {
            "h": 1,
            "w": 12,
            "x": 0,
            "y": 5,
            "id": "y",
            "max": {
              "h": 100,
              "w": 12
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "id": "y",
          "data": {
            "id": "y",
            "card": false,
            "type": "numberinputcomponent",
            "softWrap": true,
            "customCss": {
              "input": {
                "class": "",
                "style": ""
              }
            },
            "configuration": {
              "max": {
                "type": "static",
                "fieldType": "number"
              },
              "min": {
                "type": "static",
                "value": 0,
                "fieldType": "number"
              },
              "step": {
                "type": "static",
                "value": 1,
                "fieldType": "number"
              },
              "placeholder": {
                "type": "static",
                "value": "Type...",
                "fieldType": "text",
                "onlyStatic": true
              },
              "defaultValue": {
                "type": "static",
                "value": 1,
                "fieldType": "number"
              }
            },
            "verticalAlignment": "center"
          }
        },
        {
          "3": {
            "h": 1,
            "w": 1,
            "x": 0,
            "y": 7,
            "max": {
              "h": 100,
              "w": 3
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "12": {
            "h": 1,
            "w": 12,
            "x": 0,
            "y": 6,
            "id": "z",
            "max": {
              "h": 100,
              "w": 12
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "id": "z",
          "data": {
            "id": "z",
            "card": false,
            "type": "textcomponent",
            "softWrap": false,
            "customCss": {
              "text": {
                "class": "",
                "style": ""
              }
            },
            "configuration": {
              "style": {
                "type": "static",
                "value": "Label",
                "fieldType": "select",
                "onlyStatic": true,
                "optionValuesKey": "textStyleOptions"
              },
              "copyButton": {
                "type": "static",
                "value": false,
                "fieldType": "boolean",
                "onlyStatic": true
              }
            },
            "componentInput": {
              "eval": "Image",
              "type": "template",
              "value": "Hello ${ctx.username}",
              "fieldType": "template"
            },
            "verticalAlignment": "center",
            "horizontalAlignment": "left"
          }
        },
        {
          "3": {
            "h": 4,
            "w": 3,
            "x": 0,
            "y": 1,
            "max": {
              "h": 100,
              "w": 3
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "12": {
            "h": 6,
            "w": 12,
            "x": 0,
            "y": 7,
            "id": "u",
            "max": {
              "h": 100,
              "w": 12
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "id": "u",
          "data": {
            "id": "u",
            "card": false,
            "type": "fileinputcomponent",
            "customCss": {
              "container": {
                "class": "",
                "style": ""
              }
            },
            "configuration": {
              "text": {
                "type": "static",
                "value": "Drag and drop files or click to select them",
                "fieldType": "text",
                "onlyStatic": true
              },
              "allowMultiple": {
                "type": "static",
                "value": false,
                "tooltip": "If allowed, the user will be able to select more than one file",
                "fieldType": "boolean",
                "onlyStatic": true
              },
              "acceptedFileTypes": {
                "type": "static",
                "value": [
                  "image/*",
                  "application/pdf"
                ],
                "fieldType": "array",
                "onlyStatic": true
              }
            }
          }
        },
        {
          "3": {
            "h": 1,
            "w": 1,
            "x": 1,
            "y": 7,
            "max": {
              "h": 100,
              "w": 3
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "12": {
            "h": 2,
            "w": 3,
            "x": 9,
            "y": 14,
            "id": "aa",
            "max": {
              "h": 100,
              "w": 12
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "id": "aa",
          "data": {
            "id": "aa",
            "card": false,
            "type": "buttoncomponent",
            "softWrap": true,
            "customCss": {
              "button": {
                "class": "",
                "style": ""
              }
            },
            "configuration": {
              "goto": {
                "type": "static",
                "value": "",
                "tooltip": "Go to an url on success if not empty",
                "fieldType": "text"
              },
              "size": {
                "type": "static",
                "value": "sm",
                "fieldType": "select",
                "onlyStatic": true,
                "optionValuesKey": "buttonSizeOptions"
              },
              "color": {
                "type": "static",
                "value": "gray",
                "fieldType": "select",
                "onlyStatic": true,
                "optionValuesKey": "buttonColorOptions"
              },
              "label": {
                "type": "static",
                "value": "Create product",
                "fieldType": "text"
              },
              "disabled": {
                "expr": "false",
                "type": "eval",
                "fieldType": "boolean"
              },
              "afterIcon": {
                "type": "static",
                "fieldType": "icon-select",
                "onlyStatic": true
              },
              "onSuccess": {
                "selected": "",
                "configuration": {
                  "": {}
                }
              },
              "beforeIcon": {
                "type": "static",
                "value": "Plus",
                "fieldType": "icon-select",
                "onlyStatic": true
              },
              "gotoNewTab": {
                "type": "static",
                "value": true,
                "tooltip": "Go to create a new tab",
                "fieldType": "boolean"
              },
              "fillContainer": {
                "type": "static",
                "value": false,
                "fieldType": "boolean",
                "onlyStatic": true
              },
              "triggerOnAppLoad": {
                "type": "static",
                "value": false,
                "fieldType": "boolean",
                "onlyStatic": true
              }
            },
            "componentInput": {
              "type": "runnable",
              "fields": {},
              "fieldType": "any"
            },
            "verticalAlignment": "center",
            "horizontalAlignment": "center"
          }
        }
      ],
      "d-0": [
        {
          "3": {
            "h": 8,
            "w": 2,
            "x": 0,
            "y": 0,
            "max": {
              "h": 100,
              "w": 3
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "12": {
            "h": 18,
            "w": 12,
            "x": 0,
            "y": 0,
            "id": "ab",
            "max": {
              "h": 100,
              "w": 12
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "id": "ab",
          "data": {
            "id": "ab",
            "card": false,
            "type": "verticalsplitpanescomponent",
            "panes": [
              60,
              40
            ],
            "softWrap": true,
            "customCss": {
              "container": {
                "class": "",
                "style": ""
              }
            },
            "configuration": {
              "noPadding": {
                "type": "static",
                "value": true,
                "fieldType": "boolean",
                "onlyStatic": true
              }
            },
            "numberOfSubgrids": 2
          }
        }
      ],
      "d-1": [
        {
          "3": {
            "h": 8,
            "w": 2,
            "x": 0,
            "y": 0,
            "max": {
              "h": 100,
              "w": 3
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "12": {
            "h": 7,
            "w": 5,
            "x": 0,
            "y": 0,
            "id": "e",
            "max": {
              "h": 100,
              "w": 12
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "id": "e",
          "data": {
            "id": "e",
            "card": true,
            "type": "piechartcomponent",
            "customCss": {
              "container": {
                "class": "",
                "style": ""
              }
            },
            "configuration": {
              "theme": {
                "type": "static",
                "value": "theme2",
                "fieldType": "select",
                "onlyStatic": true,
                "optionValuesKey": "chartThemeOptions"
              },
              "doughnutStyle": {
                "type": "static",
                "value": false,
                "fieldType": "boolean",
                "onlyStatic": true
              }
            },
            "componentInput": {
              "type": "runnable",
              "value": {
                "data": [
                  25,
                  50,
                  25
                ],
                "labels": [
                  "Pie",
                  "Charts",
                  "<3"
                ]
              },
              "fields": {
                "orders": {
                  "type": "connected",
                  "value": null,
                  "fieldType": "array",
                  "connection": {
                    "path": "result.data",
                    "componentId": "bg_2"
                  }
                }
              },
              "runnable": {
                "name": "pieChartData",
                "type": "runnableByName",
                "inlineScript": {
                  "path": "/pieChartData",
                  "schema": {
                    "type": "object",
                    "$schema": "https://json-schema.org/draft/2020-12/schema",
                    "required": [
                      "orders"
                    ],
                    "properties": {
                      "orders": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "default": null,
                        "description": ""
                      }
                    }
                  },
                  "content": "export async function main(orders: any[]) {\n  let one = 0;\n  let two = 0;\n  let more = 0;\n\n  orders.forEach((o) => {\n    if (o.product_ids.length === 1) {\n      one++;\n    } else if (o.product_ids.length === 2) {\n      two++;\n    } else {\n      more++;\n    }\n  });\n\n  return {\n    \"data\": [\n      one,\n      two,\n      more,\n    ],\n    \"labels\": [\n      \"1 item\",\n      \"2 items\",\n      \"More than 2 items\",\n    ],\n  };\n}\n",
                  "language": "deno"
                }
              },
              "fieldType": "object",
              "recomputeOnInputChanged": true
            }
          }
        }
      ],
      "d-2": [
        {
          "3": {
            "h": 6,
            "w": 3,
            "x": 0,
            "y": 1,
            "max": {
              "h": 100,
              "w": 3
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "12": {
            "h": 10,
            "w": 12,
            "x": 0,
            "y": 0,
            "id": "bb",
            "max": {
              "h": 100,
              "w": 12
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "id": "bb",
          "data": {
            "id": "bb",
            "card": false,
            "type": "mapcomponent",
            "customCss": {
              "map": {
                "class": "",
                "style": ""
              }
            },
            "configuration": {
              "zoom": {
                "type": "static",
                "value": 3,
                "fieldType": "number"
              },
              "markers": {
                "type": "static",
                "value": [
                  {
                    "lat": 41.902783,
                    "lon": 12.496366,
                    "color": "#dc2626",
                    "title": "Rome",
                    "radius": 7,
                    "strokeColor": "#fca5a5",
                    "strokeWidth": 3
                  },
                  {
                    "lat": 51.507359,
                    "lon": -0.136439,
                    "title": "London"
                  }
                ],
                "fieldType": "array",
                "fileUpload": {
                  "accept": "application/json",
                  "convertTo": "text"
                },
                "subFieldType": "object"
              },
              "latitude": {
                "type": "static",
                "value": 50,
                "fieldType": "number"
              },
              "longitude": {
                "type": "static",
                "value": 15,
                "fieldType": "number"
              }
            }
          }
        }
      ],
      "i-0": [
        {
          "3": {
            "h": 10,
            "w": 3,
            "x": 0,
            "y": 0,
            "max": {
              "h": 100,
              "w": 3
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "12": {
            "h": 18,
            "w": 12,
            "x": 0,
            "y": 0,
            "id": "j",
            "max": {
              "h": 100,
              "w": 12
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "id": "j",
          "data": {
            "id": "j",
            "card": true,
            "type": "tablecomponent",
            "customCss": {
              "container": {
                "class": "capitalize ",
                "style": ""
              },
              "tableBody": {
                "class": "",
                "style": ""
              },
              "tableFooter": {
                "class": "",
                "style": ""
              },
              "tableHeader": {
                "class": "",
                "style": ""
              }
            },
            "actionButtons": [],
            "configuration": {
              "search": {
                "type": "static",
                "value": "By Component",
                "fieldType": "select",
                "onlyStatic": true,
                "optionValuesKey": "tableSearchOptions"
              },
              "pagination": {
                "selected": "",
                "configuration": {
                  "": {}
                }
              }
            },
            "componentInput": {
              "type": "runnable",
              "value": [
                {
                  "price": 999,
                  "title": "iPhone 13",
                  "quantity": 50,
                  "description": "The latest smartphone from Apple"
                }
              ],
              "fields": {
                "products": {
                  "type": "connected",
                  "value": null,
                  "fieldType": "array",
                  "connection": {
                    "path": "result.data",
                    "componentId": "bg_0"
                  }
                }
              },
              "runnable": {
                "name": "selectProductColumns",
                "type": "runnableByName",
                "inlineScript": {
                  "path": "/selectProductColumns",
                  "schema": {
                    "type": "object",
                    "$schema": "https://json-schema.org/draft/2020-12/schema",
                    "required": [
                      "products"
                    ],
                    "properties": {
                      "products": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "default": null,
                        "description": ""
                      }
                    }
                  },
                  "content": "export async function main(products: any[]) {\n  return products?.map((product) => {\n    const { id, title, description, price, quantity } = product;\n    return { id, title, description, price, quantity };\n  });\n}\n",
                  "language": "deno"
                }
              },
              "fieldType": "array",
              "connection": {
                "path": "result.data",
                "componentId": "bg_0"
              },
              "subFieldType": "object",
              "recomputeOnInputChanged": true
            }
          }
        }
      ],
      "i-1": [
        {
          "3": {
            "h": 1,
            "w": 1,
            "x": 0,
            "y": 1,
            "max": {
              "h": 100,
              "w": 3
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "12": {
            "h": 1,
            "w": 12,
            "x": 0,
            "y": 0,
            "id": "m",
            "max": {
              "h": 100,
              "w": 12
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "id": "m",
          "data": {
            "id": "m",
            "card": false,
            "type": "textcomponent",
            "softWrap": false,
            "customCss": {
              "text": {
                "class": "",
                "style": ""
              }
            },
            "configuration": {
              "style": {
                "type": "static",
                "value": "Label",
                "fieldType": "select",
                "onlyStatic": true,
                "optionValuesKey": "textStyleOptions"
              },
              "copyButton": {
                "type": "static",
                "value": false,
                "fieldType": "boolean",
                "onlyStatic": true
              }
            },
            "componentInput": {
              "eval": "Name",
              "type": "template",
              "value": "Hello ${ctx.username}",
              "fieldType": "template"
            },
            "verticalAlignment": "center",
            "horizontalAlignment": "left"
          }
        },
        {
          "3": {
            "h": 1,
            "w": 2,
            "x": 1,
            "y": 1,
            "max": {
              "h": 100,
              "w": 3
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "12": {
            "h": 1,
            "w": 12,
            "x": 0,
            "y": 1,
            "id": "n",
            "max": {
              "h": 100,
              "w": 12
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "id": "n",
          "data": {
            "id": "n",
            "card": false,
            "type": "textinputcomponent",
            "softWrap": true,
            "customCss": {
              "input": {
                "class": "",
                "style": ""
              }
            },
            "configuration": {
              "placeholder": {
                "type": "static",
                "value": "Type...",
                "fieldType": "text",
                "onlyStatic": true
              },
              "defaultValue": {
                "type": "connected",
                "fieldType": "text",
                "connection": {
                  "path": "selectedRow.title",
                  "componentId": "j"
                }
              }
            },
            "verticalAlignment": "center"
          }
        },
        {
          "3": {
            "h": 1,
            "w": 1,
            "x": 0,
            "y": 2,
            "max": {
              "h": 100,
              "w": 3
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "12": {
            "h": 1,
            "w": 12,
            "x": 0,
            "y": 2,
            "id": "o",
            "max": {
              "h": 100,
              "w": 12
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "id": "o",
          "data": {
            "id": "o",
            "card": false,
            "type": "textcomponent",
            "softWrap": false,
            "customCss": {
              "text": {
                "class": "",
                "style": ""
              }
            },
            "configuration": {
              "style": {
                "type": "static",
                "value": "Label",
                "fieldType": "select",
                "onlyStatic": true,
                "optionValuesKey": "textStyleOptions"
              },
              "copyButton": {
                "type": "static",
                "value": false,
                "fieldType": "boolean",
                "onlyStatic": true
              }
            },
            "componentInput": {
              "eval": "Description",
              "type": "template",
              "value": "Hello ${ctx.username}",
              "fieldType": "template"
            },
            "verticalAlignment": "center",
            "horizontalAlignment": "left"
          }
        },
        {
          "3": {
            "h": 1,
            "w": 2,
            "x": 1,
            "y": 2,
            "max": {
              "h": 100,
              "w": 3
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "12": {
            "h": 1,
            "w": 12,
            "x": 0,
            "y": 3,
            "id": "p",
            "max": {
              "h": 100,
              "w": 12
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "id": "p",
          "data": {
            "id": "p",
            "card": false,
            "type": "textinputcomponent",
            "softWrap": true,
            "customCss": {
              "input": {
                "class": "",
                "style": ""
              }
            },
            "configuration": {
              "placeholder": {
                "type": "static",
                "value": "Type...",
                "fieldType": "text",
                "onlyStatic": true
              },
              "defaultValue": {
                "type": "connected",
                "fieldType": "text",
                "connection": {
                  "path": "selectedRow.description",
                  "componentId": "j"
                }
              }
            },
            "verticalAlignment": "center"
          }
        },
        {
          "3": {
            "h": 1,
            "w": 1,
            "x": 2,
            "y": 0,
            "max": {
              "h": 100,
              "w": 3
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "12": {
            "h": 1,
            "w": 12,
            "x": 0,
            "y": 4,
            "id": "l",
            "max": {
              "h": 100,
              "w": 12
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "id": "l",
          "data": {
            "id": "l",
            "card": false,
            "type": "textcomponent",
            "softWrap": false,
            "customCss": {
              "text": {
                "class": "",
                "style": ""
              }
            },
            "configuration": {
              "style": {
                "type": "static",
                "value": "Label",
                "fieldType": "select",
                "onlyStatic": true,
                "optionValuesKey": "textStyleOptions"
              },
              "copyButton": {
                "type": "static",
                "value": false,
                "fieldType": "boolean",
                "onlyStatic": true
              }
            },
            "componentInput": {
              "eval": "Quantity",
              "type": "template",
              "value": "Hello ${ctx.username}",
              "fieldType": "template"
            },
            "verticalAlignment": "center",
            "horizontalAlignment": "left"
          }
        },
        {
          "3": {
            "h": 1,
            "w": 2,
            "x": 0,
            "y": 0,
            "max": {
              "h": 100,
              "w": 3
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "12": {
            "h": 1,
            "w": 12,
            "x": 0,
            "y": 5,
            "id": "k",
            "max": {
              "h": 100,
              "w": 12
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "id": "k",
          "data": {
            "id": "k",
            "card": false,
            "type": "numberinputcomponent",
            "softWrap": true,
            "customCss": {
              "input": {
                "class": "",
                "style": ""
              }
            },
            "configuration": {
              "max": {
                "type": "static",
                "fieldType": "number"
              },
              "min": {
                "type": "static",
                "fieldType": "number"
              },
              "step": {
                "type": "static",
                "value": 1,
                "fieldType": "number"
              },
              "placeholder": {
                "type": "static",
                "value": "Type...",
                "fieldType": "text",
                "onlyStatic": true
              },
              "defaultValue": {
                "type": "connected",
                "fieldType": "number",
                "connection": {
                  "path": "selectedRow.quantity",
                  "componentId": "j"
                }
              }
            },
            "verticalAlignment": "center"
          }
        },
        {
          "3": {
            "h": 1,
            "w": 1,
            "x": 1,
            "y": 3,
            "max": {
              "h": 100,
              "w": 3
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "12": {
            "h": 1,
            "w": 12,
            "x": 0,
            "y": 6,
            "id": "au",
            "max": {
              "h": 100,
              "w": 12
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "id": "au",
          "data": {
            "id": "au",
            "card": false,
            "type": "textcomponent",
            "softWrap": false,
            "customCss": {
              "text": {
                "class": "",
                "style": ""
              }
            },
            "configuration": {
              "style": {
                "type": "static",
                "value": "Label",
                "fieldType": "select",
                "onlyStatic": true,
                "optionValuesKey": "textStyleOptions"
              },
              "copyButton": {
                "type": "static",
                "value": false,
                "fieldType": "boolean",
                "onlyStatic": true
              }
            },
            "componentInput": {
              "eval": "Price",
              "type": "template",
              "value": "Hello ${ctx.username}",
              "fieldType": "template"
            },
            "verticalAlignment": "center",
            "horizontalAlignment": "left"
          }
        },
        {
          "3": {
            "h": 1,
            "w": 2,
            "x": 0,
            "y": 8,
            "max": {
              "h": 100,
              "w": 3
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "12": {
            "h": 1,
            "w": 12,
            "x": 0,
            "y": 7,
            "id": "av",
            "max": {
              "h": 100,
              "w": 12
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "id": "av",
          "data": {
            "id": "av",
            "card": false,
            "type": "numberinputcomponent",
            "softWrap": true,
            "customCss": {
              "input": {
                "class": "",
                "style": ""
              }
            },
            "configuration": {
              "max": {
                "type": "static",
                "fieldType": "number"
              },
              "min": {
                "type": "static",
                "fieldType": "number"
              },
              "step": {
                "type": "static",
                "value": 1,
                "fieldType": "number"
              },
              "placeholder": {
                "type": "static",
                "value": "Type...",
                "fieldType": "text",
                "onlyStatic": true
              },
              "defaultValue": {
                "type": "connected",
                "fieldType": "number",
                "connection": {
                  "path": "selectedRow.price",
                  "componentId": "j"
                }
              }
            },
            "verticalAlignment": "center"
          }
        },
        {
          "3": {
            "h": 4,
            "w": 3,
            "x": 0,
            "y": 4,
            "max": {
              "h": 100,
              "w": 3
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "12": {
            "h": 6,
            "w": 12,
            "x": 0,
            "y": 8,
            "id": "r",
            "max": {
              "h": 100,
              "w": 12
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "id": "r",
          "data": {
            "id": "r",
            "card": false,
            "type": "imagecomponent",
            "customCss": {
              "image": {
                "class": "",
                "style": ""
              }
            },
            "configuration": {
              "source": {
                "type": "connected",
                "value": "/logo.svg",
                "fieldType": "text",
                "connection": {
                  "path": "result",
                  "componentId": "bg_1"
                },
                "fileUpload": {
                  "accept": "image/*",
                  "convertTo": "base64"
                }
              },
              "altText": {
                "type": "static",
                "value": "",
                "tooltip": "This text will appear if the image can't be loaded for any reason",
                "fieldType": "text",
                "onlyStatic": true
              },
              "imageFit": {
                "type": "static",
                "value": "contain",
                "fieldType": "select",
                "onlyStatic": true,
                "optionValuesKey": "objectFitOptions"
              }
            }
          }
        },
        {
          "3": {
            "h": 1,
            "w": 1,
            "x": 0,
            "y": 3,
            "max": {
              "h": 100,
              "w": 3
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "12": {
            "h": 1,
            "w": 12,
            "x": 0,
            "y": 17,
            "id": "q",
            "max": {
              "h": 100,
              "w": 12
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "id": "q",
          "data": {
            "id": "q",
            "card": false,
            "type": "buttoncomponent",
            "softWrap": true,
            "customCss": {
              "button": {
                "class": "",
                "style": ""
              }
            },
            "recomputeIds": [
              "bg_0"
            ],
            "configuration": {
              "goto": {
                "type": "static",
                "value": "",
                "tooltip": "Go to an url on success if not empty",
                "fieldType": "text"
              },
              "size": {
                "type": "static",
                "value": "xs",
                "fieldType": "select",
                "onlyStatic": true,
                "optionValuesKey": "buttonSizeOptions"
              },
              "color": {
                "type": "static",
                "value": "dark",
                "fieldType": "select",
                "onlyStatic": true,
                "optionValuesKey": "buttonColorOptions"
              },
              "label": {
                "type": "static",
                "value": "Save",
                "fieldType": "text"
              },
              "disabled": {
                "expr": "false",
                "type": "eval",
                "fieldType": "boolean"
              },
              "afterIcon": {
                "type": "static",
                "fieldType": "icon-select",
                "onlyStatic": true
              },
              "beforeIcon": {
                "type": "static",
                "value": "Save",
                "fieldType": "icon-select",
                "onlyStatic": true
              },
              "gotoNewTab": {
                "type": "static",
                "value": true,
                "tooltip": "Go to create a new tab",
                "fieldType": "boolean"
              },
              "fillContainer": {
                "type": "static",
                "value": true,
                "fieldType": "boolean",
                "onlyStatic": true
              },
              "triggerOnAppLoad": {
                "type": "static",
                "value": false,
                "fieldType": "boolean",
                "onlyStatic": true
              }
            },
            "componentInput": {
              "type": "runnable",
              "fields": {
                "id": {
                  "type": "connected",
                  "value": null,
                  "fieldType": "string",
                  "connection": {
                    "path": "selectedRow.id",
                    "componentId": "j"
                  }
                },
                "auth": {
                  "type": "static",
                  "value": "$res:f/examples/demo_supabase",
                  "format": "resource-supabase",
                  "fieldType": "object"
                },
                "price": {
                  "type": "connected",
                  "value": null,
                  "fieldType": "number",
                  "connection": {
                    "path": "result",
                    "componentId": "av"
                  }
                },
                "title": {
                  "type": "connected",
                  "value": null,
                  "fieldType": "string",
                  "connection": {
                    "path": "result",
                    "componentId": "n"
                  }
                },
                "quantity": {
                  "type": "connected",
                  "value": null,
                  "fieldType": "number",
                  "connection": {
                    "path": "result",
                    "componentId": "k"
                  }
                },
                "description": {
                  "type": "connected",
                  "value": null,
                  "fieldType": "string",
                  "connection": {
                    "path": "result",
                    "componentId": "p"
                  }
                }
              },
              "runnable": {
                "name": "updateProduct",
                "type": "runnableByName",
                "inlineScript": {
                  "path": "hub/648/supabase/update_data",
                  "schema": {
                    "type": "object",
                    "$schema": "https://json-schema.org/draft/2020-12/schema",
                    "required": [
                      "auth",
                      "id",
                      "title",
                      "description",
                      "quantity",
                      "price"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "default": null,
                        "description": ""
                      },
                      "auth": {
                        "type": "object",
                        "format": "resource-supabase",
                        "default": null,
                        "description": ""
                      },
                      "price": {
                        "type": "number",
                        "default": null,
                        "description": ""
                      },
                      "title": {
                        "type": "string",
                        "default": null,
                        "description": ""
                      },
                      "quantity": {
                        "type": "number",
                        "default": null,
                        "description": ""
                      },
                      "description": {
                        "type": "string",
                        "default": null,
                        "description": ""
                      }
                    }
                  },
                  "content": "import { Resource } from \"https://deno.land/x/windmill@v1.70.1/mod.ts\";\nimport { createClient } from \"https://esm.sh/@supabase/supabase-js@2\";\n\nexport async function main(\n  auth: Resource<\"supabase\">,\n  id: string,\n  title: string,\n  description: string,\n  quantity: number,\n  price: number,\n) {\n  const client = createClient(auth.url, auth.key);\n\n  return await client\n    .from(\"products\")\n    .update({ title, description, quantity, price })\n    .eq(\"id\", id);\n}\n",
                  "language": "deno"
                }
              },
              "fieldType": "any",
              "recomputeOnInputChanged": true
            },
            "verticalAlignment": "center",
            "horizontalAlignment": "right"
          }
        }
      ],
      "ab-0": [
        {
          "3": {
            "h": 10,
            "w": 3,
            "x": 0,
            "y": 0,
            "max": {
              "h": 100,
              "w": 3
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "12": {
            "h": 17,
            "w": 12,
            "x": 0,
            "y": 0,
            "id": "ac",
            "max": {
              "h": 100,
              "w": 12
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "id": "ac",
          "data": {
            "id": "ac",
            "card": true,
            "type": "tablecomponent",
            "customCss": {
              "container": {
                "class": "",
                "style": ""
              },
              "tableBody": {
                "class": "",
                "style": ""
              },
              "tableFooter": {
                "class": "",
                "style": ""
              },
              "tableHeader": {
                "class": "",
                "style": ""
              }
            },
            "actionButtons": [
              {
                "id": "ac_a",
                "card": false,
                "type": "buttoncomponent",
                "customCss": {
                  "button": {
                    "class": "",
                    "style": ""
                  }
                },
                "recomputeIds": [
                  "bg_0",
                  "bg_2"
                ],
                "configuration": {
                  "goto": {
                    "type": "static",
                    "value": "",
                    "tooltip": "Go to an url on success if not empty",
                    "fieldType": "text"
                  },
                  "size": {
                    "type": "static",
                    "value": "xs",
                    "fieldType": "select",
                    "optionValuesKey": "buttonSizeOptions"
                  },
                  "color": {
                    "type": "static",
                    "value": "dark",
                    "fieldType": "select",
                    "optionValuesKey": "buttonColorOptions"
                  },
                  "label": {
                    "type": "static",
                    "value": "Refund",
                    "fieldType": "text"
                  },
                  "disabled": {
                    "expr": "false",
                    "type": "eval",
                    "fieldType": "boolean"
                  },
                  "afterIcon": {
                    "type": "static",
                    "fieldType": "icon-select",
                    "onlyStatic": true
                  },
                  "onSuccess": {
                    "selected": "",
                    "configuration": {
                      "": {}
                    }
                  },
                  "beforeIcon": {
                    "type": "static",
                    "value": "DollarSign",
                    "fieldType": "icon-select",
                    "onlyStatic": true
                  },
                  "gotoNewTab": {
                    "type": "static",
                    "value": true,
                    "tooltip": "Go to create a new tab",
                    "fieldType": "boolean"
                  },
                  "fillContainer": {
                    "type": "static"
                  },
                  "triggerOnAppLoad": {
                    "type": "static"
                  }
                },
                "componentInput": {
                  "type": "runnable",
                  "fields": {
                    "auth": {
                      "type": "static",
                      "value": "$res:u/henri/wm_showcases_supabase",
                      "format": "resource-supabase",
                      "fieldType": "object"
                    },
                    "orderId": {
                      "type": "connected",
                      "value": "",
                      "fieldType": "string",
                      "connection": {
                        "path": "selectedRow.id",
                        "componentId": "ac"
                      }
                    }
                  },
                  "runnable": {
                    "name": "toggleRefund",
                    "type": "runnableByName",
                    "inlineScript": {
                      "path": "/toggleRefund",
                      "schema": {
                        "type": "object",
                        "$schema": "https://json-schema.org/draft/2020-12/schema",
                        "required": [
                          "auth",
                          "orderId"
                        ],
                        "properties": {
                          "auth": {
                            "type": "object",
                            "format": "resource-supabase",
                            "default": null,
                            "description": ""
                          },
                          "orderId": {
                            "type": "string",
                            "default": null,
                            "description": ""
                          }
                        }
                      },
                      "content": "import { Resource } from \"https://deno.land/x/windmill@v1.70.1/mod.ts\";\nimport { createClient, SupabaseClient } from \"https://esm.sh/@supabase/supabase-js@2.10.0\";\n\nexport async function main(\n  auth: Resource<\"supabase\">,\n  orderId: string\n) {\n  const client = createClient(auth.url, auth.key);\n\n  const { data } = await client.from('orders').select('refunded').eq('id', orderId);\n  if(data[0]?.refunded) {\n    return `Order with ID \"${orderId}\" is already refunded`;\n  }\n\n  const refunded = await setOrderRefundedValue(client, orderId, true);\n  \n  const promises = (refunded.product_ids as string[]).map(id => {\n    return client\n      .from('products')\n      .select('id, quantity')\n      .eq('id', id);\n  });\n  try {\n    const products = await Promise.all(promises);\n    const productValues = [];\n    for(const p of products) {\n      if(p.error) {\n        throw Error(p.error);\n      }\n      const { id, quantity } = p.data[0];\n      productValues.push({ id, quantity });\n    }\n    return await revertProductQuantities(client, productValues);\n  } catch (err: any) {\n    await setOrderRefundedValue(client, orderId, false);\n    throw Error(`Reverted refund because:\\n${err}`);\n  }\n}\n\nasync function setOrderRefundedValue(client: SupabaseClient<any, \"public\", any>, id: string, value: boolean) {\n  const { data, error } = await client\n    .from('orders')\n    .update({refunded: value})\n    .eq('id', id)\n    .select();\n\n  if(error || !data.length) {\n    throw Error(error || `Couldn't find order with ID \"${id}\"`);\n  }\n\n  return data[0];\n}\n\nasync function revertProductQuantities(client: SupabaseClient<any, \"public\", any>, products: {id: string, quantity: number}[]) {\n  const promises = products.map(({id, quantity}) => {\n    return client\n      .from('products')\n      .update({quantity: quantity + 1})\n      .eq('id', id)\n      .select();\n  })\n\n  return await Promise.all(promises);\n}",
                      "language": "deno"
                    }
                  },
                  "fieldType": "any",
                  "recomputeOnInputChanged": true
                }
              },
              {
                "id": "ac_b",
                "card": false,
                "type": "buttoncomponent",
                "customCss": {
                  "button": {
                    "class": "",
                    "style": ""
                  }
                },
                "configuration": {
                  "goto": {
                    "type": "static",
                    "value": "",
                    "tooltip": "Go to an url on success if not empty",
                    "fieldType": "text"
                  },
                  "size": {
                    "type": "static",
                    "value": "xs",
                    "fieldType": "select",
                    "optionValuesKey": "buttonSizeOptions"
                  },
                  "color": {
                    "type": "static",
                    "value": "light",
                    "fieldType": "select",
                    "optionValuesKey": "buttonColorOptions"
                  },
                  "label": {
                    "type": "static",
                    "value": "Go to user",
                    "fieldType": "text"
                  },
                  "disabled": {
                    "expr": "false",
                    "type": "eval",
                    "fieldType": "boolean"
                  },
                  "afterIcon": {
                    "type": "static",
                    "fieldType": "icon-select",
                    "onlyStatic": true
                  },
                  "beforeIcon": {
                    "type": "static",
                    "value": "User",
                    "fieldType": "icon-select",
                    "onlyStatic": true
                  },
                  "gotoNewTab": {
                    "type": "static",
                    "value": true,
                    "tooltip": "Go to create a new tab",
                    "fieldType": "boolean"
                  }
                },
                "componentInput": {
                  "type": "runnable",
                  "fields": {},
                  "runnable": {
                    "name": "Inline Script 0",
                    "type": "runnableByName",
                    "inlineScript": {
                      "path": "frontend script",
                      "content": "setTab('a', 2)",
                      "language": "frontend"
                    }
                  },
                  "fieldType": "any",
                  "recomputeOnInputChanged": true
                }
              }
            ],
            "configuration": {
              "search": {
                "type": "static",
                "value": "By Component",
                "fieldType": "select",
                "onlyStatic": true,
                "optionValuesKey": "tableSearchOptions"
              },
              "pagination": {
                "selected": "",
                "configuration": {
                  "": {}
                }
              }
            },
            "componentInput": {
              "type": "runnable",
              "value": [
                {
                  "id": 1,
                  "age": 42,
                  "name": "A cell with a long name"
                },
                {
                  "id": 2,
                  "age": 84,
                  "name": "A briefer cell"
                }
              ],
              "fields": {
                "orders": {
                  "type": "connected",
                  "value": null,
                  "fieldType": "array",
                  "connection": {
                    "path": "result.data",
                    "componentId": "bg_2"
                  }
                }
              },
              "runnable": {
                "name": "selectOrdersColumns",
                "type": "runnableByName",
                "inlineScript": {
                  "path": "/selectOrdersColumns",
                  "schema": {
                    "type": "object",
                    "$schema": "https://json-schema.org/draft/2020-12/schema",
                    "required": [
                      "orders"
                    ],
                    "properties": {
                      "orders": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "default": null,
                        "description": ""
                      }
                    }
                  },
                  "content": "export async function main(orders: any[]) {\n  return orders?.map((order) => {\n    const {  total_price, country, city, address, id } = order;\n    return { id, total_price, address: `${address}, ${city}, ${country}`};\n  });\n}\n",
                  "language": "deno"
                }
              },
              "fieldType": "array",
              "subFieldType": "object",
              "recomputeOnInputChanged": true
            }
          }
        }
      ],
      "ab-1": [
        {
          "3": {
            "h": 8,
            "w": 2,
            "x": 0,
            "y": 0,
            "max": {
              "h": 100,
              "w": 3
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "12": {
            "h": 17,
            "w": 12,
            "x": 0,
            "y": 0,
            "id": "ad",
            "max": {
              "h": 100,
              "w": 12
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "id": "ad",
          "data": {
            "id": "ad",
            "card": false,
            "type": "containercomponent",
            "softWrap": true,
            "customCss": {
              "container": {
                "class": "m-2",
                "style": ""
              }
            },
            "configuration": {
              "noPadding": {
                "type": "static",
                "value": false,
                "fieldType": "boolean",
                "onlyStatic": true
              }
            },
            "numberOfSubgrids": 1
          }
        }
      ],
      "ad-0": [
        {
          "3": {
            "h": 1,
            "w": 1,
            "x": 0,
            "y": 10,
            "max": {
              "h": 100,
              "w": 3
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "12": {
            "h": 1,
            "w": 12,
            "x": 0,
            "y": 0,
            "id": "af",
            "max": {
              "h": 100,
              "w": 12
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "id": "af",
          "data": {
            "id": "af",
            "card": false,
            "type": "textcomponent",
            "softWrap": false,
            "customCss": {
              "text": {
                "class": "",
                "style": ""
              }
            },
            "configuration": {
              "style": {
                "type": "static",
                "value": "Label",
                "fieldType": "select",
                "onlyStatic": true,
                "optionValuesKey": "textStyleOptions"
              },
              "copyButton": {
                "type": "static",
                "value": false,
                "fieldType": "boolean",
                "onlyStatic": true
              }
            },
            "componentInput": {
              "eval": "Order items",
              "type": "template",
              "value": "Hello ${ctx.username}",
              "fieldType": "template"
            },
            "verticalAlignment": "center",
            "horizontalAlignment": "left"
          }
        },
        {
          "3": {
            "h": 10,
            "w": 3,
            "x": 0,
            "y": 0,
            "max": {
              "h": 100,
              "w": 3
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "12": {
            "h": 15,
            "w": 12,
            "x": 0,
            "y": 1,
            "id": "ae",
            "max": {
              "h": 100,
              "w": 12
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "id": "ae",
          "data": {
            "id": "ae",
            "card": true,
            "type": "tablecomponent",
            "customCss": {
              "container": {
                "class": "",
                "style": ""
              },
              "tableBody": {
                "class": "",
                "style": ""
              },
              "tableFooter": {
                "class": "",
                "style": ""
              },
              "tableHeader": {
                "class": "",
                "style": ""
              }
            },
            "actionButtons": [
              {
                "id": "ae_a",
                "card": false,
                "type": "buttoncomponent",
                "customCss": {
                  "button": {
                    "class": "",
                    "style": ""
                  }
                },
                "configuration": {
                  "goto": {
                    "type": "static",
                    "value": "",
                    "tooltip": "Go to an url on success if not empty",
                    "fieldType": "text"
                  },
                  "size": {
                    "type": "static",
                    "value": "xs",
                    "fieldType": "select",
                    "optionValuesKey": "buttonSizeOptions"
                  },
                  "color": {
                    "type": "static",
                    "value": "dark",
                    "fieldType": "select",
                    "optionValuesKey": "buttonColorOptions"
                  },
                  "label": {
                    "type": "static",
                    "value": "Go to product",
                    "fieldType": "text"
                  },
                  "disabled": {
                    "expr": "false",
                    "type": "eval",
                    "fieldType": "boolean"
                  },
                  "afterIcon": {
                    "type": "static",
                    "fieldType": "icon-select",
                    "onlyStatic": true
                  },
                  "beforeIcon": {
                    "type": "static",
                    "value": "ArrowUpRight",
                    "fieldType": "icon-select",
                    "onlyStatic": true
                  },
                  "gotoNewTab": {
                    "type": "static",
                    "value": true,
                    "tooltip": "Go to create a new tab",
                    "fieldType": "boolean"
                  }
                },
                "componentInput": {
                  "type": "runnable",
                  "fields": {},
                  "runnable": {
                    "name": "Inline Script 0",
                    "type": "runnableByName",
                    "inlineScript": {
                      "path": "frontend script",
                      "content": "setTab('a', 0)",
                      "language": "frontend"
                    }
                  },
                  "fieldType": "any",
                  "recomputeOnInputChanged": true
                }
              }
            ],
            "configuration": {
              "search": {
                "type": "static",
                "value": "Disabled",
                "fieldType": "select",
                "onlyStatic": true,
                "optionValuesKey": "tableSearchOptions"
              },
              "pagination": {
                "selected": "",
                "configuration": {
                  "": {}
                }
              }
            },
            "componentInput": {
              "type": "runnable",
              "value": [
                {
                  "id": 1,
                  "age": 42,
                  "name": "A cell with a long name"
                },
                {
                  "id": 2,
                  "age": 84,
                  "name": "A briefer cell"
                }
              ],
              "fields": {
                "orders": {
                  "type": "connected",
                  "value": null,
                  "fieldType": "array",
                  "connection": {
                    "path": "result.data",
                    "componentId": "bg_2"
                  }
                },
                "products": {
                  "type": "connected",
                  "value": null,
                  "fieldType": "array",
                  "connection": {
                    "path": "result.data",
                    "componentId": "bg_0"
                  }
                },
                "selectedOrderIndex": {
                  "type": "connected",
                  "value": null,
                  "fieldType": "number",
                  "connection": {
                    "path": "selectedRowIndex",
                    "componentId": "ac"
                  }
                }
              },
              "runnable": {
                "name": "getOrderProducts",
                "type": "runnableByName",
                "inlineScript": {
                  "path": "/getOrderProducts",
                  "schema": {
                    "type": "object",
                    "$schema": "https://json-schema.org/draft/2020-12/schema",
                    "required": [
                      "selectedOrderIndex",
                      "orders",
                      "products"
                    ],
                    "properties": {
                      "orders": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "default": null
                      },
                      "products": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "default": null
                      },
                      "selectedOrderIndex": {
                        "type": "number",
                        "default": null
                      }
                    }
                  },
                  "content": "// import * as wmill from \"https://deno.land/x/windmill@v1.72.0/mod.ts\"\n\nexport async function main(\n  selectedOrderIndex: number,\n  orders: any[],\n  products: any[],\n) {\n  if (!orders) {\n    return [];\n  }\n\n  return orders[selectedOrderIndex].product_ids.map((id) => {\n    const product = products?.find((p) => p.id === id);\n\n    if (!product) {\n      return {};\n    }\n\n    const { title, description, price } = product;\n\n    return { title, description, price, quantity: 1 };\n  });\n}\n",
                  "language": "deno"
                }
              },
              "fieldType": "array",
              "subFieldType": "object",
              "recomputeOnInputChanged": true
            }
          }
        }
      ],
      "al-0": [
        {
          "3": {
            "h": 1,
            "w": 1,
            "x": 2,
            "y": 0,
            "max": {
              "h": 100,
              "w": 3
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "12": {
            "h": 1,
            "w": 12,
            "x": 0,
            "y": 0,
            "id": "an",
            "max": {
              "h": 100,
              "w": 12
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "id": "an",
          "data": {
            "id": "an",
            "card": false,
            "type": "textcomponent",
            "softWrap": false,
            "customCss": {
              "text": {
                "class": "",
                "style": ""
              }
            },
            "configuration": {
              "style": {
                "type": "static",
                "value": "Label",
                "fieldType": "select",
                "onlyStatic": true,
                "optionValuesKey": "textStyleOptions"
              },
              "tooltip": {
                "type": "static"
              },
              "copyButton": {
                "type": "static",
                "value": false,
                "fieldType": "boolean",
                "onlyStatic": true
              }
            },
            "componentInput": {
              "eval": "Select a user",
              "type": "template",
              "value": "Hello ${ctx.username}",
              "fieldType": "template"
            },
            "verticalAlignment": "center",
            "horizontalAlignment": "left"
          }
        },
        {
          "3": {
            "h": 1,
            "w": 2,
            "x": 0,
            "y": 0,
            "max": {
              "h": 100,
              "w": 3
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "12": {
            "h": 1,
            "w": 12,
            "x": 0,
            "y": 1,
            "id": "am",
            "max": {
              "h": 100,
              "w": 12
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "id": "am",
          "data": {
            "id": "am",
            "card": false,
            "type": "selectcomponent",
            "softWrap": true,
            "customCss": {
              "input": {
                "style": ""
              }
            },
            "configuration": {
              "items": {
                "type": "connected",
                "value": [
                  {
                    "label": "Foo",
                    "value": "foo"
                  },
                  {
                    "label": "Bar",
                    "value": "bar"
                  }
                ],
                "fieldType": "array",
                "connection": {
                  "path": "result",
                  "componentId": "bg_4"
                },
                "subFieldType": "object"
              },
              "create": {
                "type": "static",
                "value": false,
                "fieldType": "boolean",
                "onlyStatic": true
              },
              "placeholder": {
                "type": "static",
                "value": "Select an item",
                "fieldType": "text",
                "onlyStatic": true
              },
              "defaultValue": {
                "type": "static",
                "fieldType": "object"
              }
            },
            "verticalAlignment": "center"
          }
        },
        {
          "3": {
            "h": 10,
            "w": 3,
            "x": 0,
            "y": 1,
            "max": {
              "h": 100,
              "w": 3
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "12": {
            "h": 17,
            "w": 12,
            "x": 0,
            "y": 2,
            "id": "ao",
            "max": {
              "h": 100,
              "w": 12
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "id": "ao",
          "data": {
            "id": "ao",
            "card": true,
            "type": "tablecomponent",
            "customCss": {
              "container": {
                "class": "",
                "style": ""
              },
              "tableBody": {
                "class": "",
                "style": ""
              },
              "tableFooter": {
                "class": "",
                "style": ""
              },
              "tableHeader": {
                "class": "",
                "style": ""
              }
            },
            "actionButtons": [
              {
                "id": "ao_a",
                "card": false,
                "type": "buttoncomponent",
                "customCss": {
                  "button": {
                    "class": "",
                    "style": ""
                  }
                },
                "recomputeIds": [
                  "ap"
                ],
                "configuration": {
                  "goto": {
                    "type": "static",
                    "value": "",
                    "tooltip": "Go to an url on success if not empty",
                    "fieldType": "text"
                  },
                  "size": {
                    "type": "static",
                    "value": "xs",
                    "fieldType": "select",
                    "optionValuesKey": "buttonSizeOptions"
                  },
                  "color": {
                    "type": "static",
                    "value": "blue",
                    "fieldType": "select",
                    "optionValuesKey": "buttonColorOptions"
                  },
                  "label": {
                    "type": "static",
                    "value": "Add",
                    "fieldType": "text"
                  },
                  "disabled": {
                    "expr": "false",
                    "type": "eval",
                    "fieldType": "boolean"
                  },
                  "afterIcon": {
                    "type": "static",
                    "fieldType": "icon-select",
                    "onlyStatic": true
                  },
                  "onSuccess": {
                    "selected": "",
                    "configuration": {
                      "": {}
                    }
                  },
                  "beforeIcon": {
                    "type": "static",
                    "value": "PlusCircle",
                    "fieldType": "icon-select",
                    "onlyStatic": true
                  },
                  "gotoNewTab": {
                    "type": "static",
                    "value": true,
                    "tooltip": "Go to create a new tab",
                    "fieldType": "boolean"
                  },
                  "fillContainer": {
                    "type": "static"
                  },
                  "triggerOnAppLoad": {
                    "type": "static"
                  }
                },
                "componentInput": {
                  "type": "runnable",
                  "fields": {},
                  "runnable": {
                    "name": "addToCart",
                    "type": "runnableByName",
                    "inlineScript": {
                      "path": "/addToCart",
                      "content": "\nif (state.cart) {\n  state.cart = [ao.selectedRow.id, ...state.cart]\n} else {\n  state.cart = [ao.selectedRow.id]\n}\n",
                      "language": "frontend"
                    }
                  },
                  "fieldType": "any",
                  "recomputeOnInputChanged": true
                }
              }
            ],
            "configuration": {
              "search": {
                "type": "static",
                "value": "By Component",
                "fieldType": "select",
                "onlyStatic": true,
                "optionValuesKey": "tableSearchOptions"
              }
            },
            "componentInput": {
              "type": "connected",
              "value": [
                {
                  "id": 1,
                  "age": 42,
                  "name": "A cell with a long name"
                },
                {
                  "id": 2,
                  "age": 84,
                  "name": "A briefer cell"
                }
              ],
              "fieldType": "array",
              "connection": {
                "path": "result",
                "componentId": "j"
              },
              "subFieldType": "object"
            }
          }
        }
      ],
      "al-1": [
        {
          "3": {
            "h": 1,
            "w": 1,
            "x": 0,
            "y": 10,
            "max": {
              "h": 100,
              "w": 3
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "12": {
            "h": 1,
            "w": 12,
            "x": 0,
            "y": 0,
            "id": "aq",
            "max": {
              "h": 100,
              "w": 12
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "id": "aq",
          "data": {
            "id": "aq",
            "card": false,
            "type": "textcomponent",
            "softWrap": false,
            "customCss": {
              "text": {
                "class": "",
                "style": ""
              }
            },
            "configuration": {
              "style": {
                "type": "static",
                "value": "Label",
                "fieldType": "select",
                "onlyStatic": true,
                "optionValuesKey": "textStyleOptions"
              },
              "copyButton": {
                "type": "static",
                "value": false,
                "fieldType": "boolean",
                "onlyStatic": true
              }
            },
            "componentInput": {
              "eval": "Cart",
              "type": "template",
              "value": "Hello ${ctx.username}",
              "fieldType": "template"
            },
            "verticalAlignment": "center",
            "horizontalAlignment": "left"
          }
        },
        {
          "3": {
            "h": 10,
            "w": 3,
            "x": 0,
            "y": 0,
            "max": {
              "h": 100,
              "w": 3
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "12": {
            "h": 14,
            "w": 12,
            "x": 0,
            "y": 1,
            "id": "ap",
            "max": {
              "h": 100,
              "w": 12
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "id": "ap",
          "data": {
            "id": "ap",
            "card": true,
            "type": "tablecomponent",
            "customCss": {
              "container": {
                "class": "",
                "style": ""
              },
              "tableBody": {
                "class": "",
                "style": ""
              },
              "tableFooter": {
                "class": "",
                "style": ""
              },
              "tableHeader": {
                "class": "",
                "style": ""
              }
            },
            "actionButtons": [
              {
                "id": "ap_a",
                "card": false,
                "type": "buttoncomponent",
                "customCss": {
                  "button": {
                    "class": "",
                    "style": ""
                  }
                },
                "recomputeIds": [
                  "ap"
                ],
                "configuration": {
                  "goto": {
                    "type": "static",
                    "value": "",
                    "tooltip": "Go to an url on success if not empty",
                    "fieldType": "text"
                  },
                  "size": {
                    "type": "static",
                    "value": "xs",
                    "fieldType": "select",
                    "optionValuesKey": "buttonSizeOptions"
                  },
                  "color": {
                    "type": "static",
                    "value": "red",
                    "fieldType": "select",
                    "optionValuesKey": "buttonColorOptions"
                  },
                  "label": {
                    "type": "static",
                    "value": "Remove",
                    "fieldType": "text"
                  },
                  "disabled": {
                    "expr": "false",
                    "type": "eval",
                    "fieldType": "boolean"
                  },
                  "afterIcon": {
                    "type": "static",
                    "fieldType": "icon-select",
                    "onlyStatic": true
                  },
                  "beforeIcon": {
                    "type": "static",
                    "fieldType": "icon-select",
                    "onlyStatic": true
                  },
                  "gotoNewTab": {
                    "type": "static",
                    "value": true,
                    "tooltip": "Go to create a new tab",
                    "fieldType": "boolean"
                  }
                },
                "componentInput": {
                  "type": "runnable",
                  "fields": {},
                  "runnable": {
                    "name": "Inline Script 0",
                    "type": "runnableByName",
                    "inlineScript": {
                      "path": "frontend script",
                      "content": "if (state.cart) {\n  state.cart.splice(ap.selectedRowIndex, 1)\n}",
                      "language": "frontend"
                    }
                  },
                  "fieldType": "any",
                  "recomputeOnInputChanged": true
                }
              }
            ],
            "configuration": {
              "search": {
                "type": "static",
                "value": "Disabled",
                "fieldType": "select",
                "onlyStatic": true,
                "optionValuesKey": "tableSearchOptions"
              },
              "pagination": {
                "selected": "",
                "configuration": {
                  "": {}
                }
              }
            },
            "componentInput": {
              "type": "runnable",
              "value": [
                {
                  "id": 1,
                  "age": 42,
                  "name": "A cell with a long name"
                },
                {
                  "id": 2,
                  "age": 84,
                  "name": "A briefer cell"
                }
              ],
              "fields": {},
              "runnable": {
                "name": "loadCartFromState",
                "type": "runnableByName",
                "inlineScript": {
                  "path": "/loadCartFromState",
                  "content": "\nreturn state.cart ? state.cart.map(id => j.result.find(x => x.id === id)) : []",
                  "language": "frontend"
                }
              },
              "fieldType": "array",
              "subFieldType": "object",
              "recomputeOnInputChanged": true
            }
          }
        },
        {
          "3": {
            "h": 1,
            "w": 1,
            "x": 0,
            "y": 12,
            "max": {
              "h": 100,
              "w": 3
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "12": {
            "h": 1,
            "w": 12,
            "x": 0,
            "y": 15,
            "id": "ba",
            "max": {
              "h": 100,
              "w": 12
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "id": "ba",
          "data": {
            "id": "ba",
            "card": false,
            "type": "textcomponent",
            "softWrap": false,
            "customCss": {
              "text": {
                "class": "",
                "style": ""
              }
            },
            "configuration": {
              "style": {
                "type": "static",
                "value": "Label",
                "fieldType": "select",
                "onlyStatic": true,
                "optionValuesKey": "textStyleOptions"
              },
              "copyButton": {
                "type": "static",
                "value": false,
                "fieldType": "boolean",
                "onlyStatic": true
              }
            },
            "componentInput": {
              "eval": "Total: ${ap.result.reduce((accu, curr) => accu + curr.price/100, 0)} CHF",
              "type": "template",
              "value": "Hello ${ctx.username}",
              "fieldType": "template"
            },
            "verticalAlignment": "center",
            "horizontalAlignment": "right"
          }
        },
        {
          "3": {
            "h": 1,
            "w": 1,
            "x": 0,
            "y": 11,
            "max": {
              "h": 100,
              "w": 3
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "12": {
            "h": 1,
            "w": 3,
            "x": 0,
            "y": 18,
            "id": "at",
            "max": {
              "h": 100,
              "w": 12
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "id": "at",
          "data": {
            "id": "at",
            "card": false,
            "type": "buttoncomponent",
            "softWrap": true,
            "customCss": {
              "button": {
                "class": "",
                "style": ""
              }
            },
            "recomputeIds": [
              "ap"
            ],
            "configuration": {
              "goto": {
                "type": "static",
                "value": "",
                "tooltip": "Go to an url on success if not empty",
                "fieldType": "text"
              },
              "size": {
                "type": "static",
                "value": "xs",
                "fieldType": "select",
                "onlyStatic": true,
                "optionValuesKey": "buttonSizeOptions"
              },
              "color": {
                "type": "static",
                "value": "red",
                "fieldType": "select",
                "onlyStatic": true,
                "optionValuesKey": "buttonColorOptions"
              },
              "label": {
                "type": "static",
                "value": "Delete cart",
                "fieldType": "text"
              },
              "disabled": {
                "expr": "false",
                "type": "eval",
                "fieldType": "boolean"
              },
              "afterIcon": {
                "type": "static",
                "fieldType": "icon-select",
                "onlyStatic": true
              },
              "onSuccess": {
                "selected": "",
                "configuration": {
                  "": {}
                }
              },
              "beforeIcon": {
                "type": "static",
                "value": "Trash",
                "fieldType": "icon-select",
                "onlyStatic": true
              },
              "gotoNewTab": {
                "type": "static",
                "value": true,
                "tooltip": "Go to create a new tab",
                "fieldType": "boolean"
              },
              "fillContainer": {
                "type": "static",
                "value": false,
                "fieldType": "boolean",
                "onlyStatic": true
              },
              "triggerOnAppLoad": {
                "type": "static",
                "value": false,
                "fieldType": "boolean",
                "onlyStatic": true
              }
            },
            "componentInput": {
              "type": "runnable",
              "fields": {},
              "runnable": {
                "name": "Inline Script 0",
                "type": "runnableByName",
                "inlineScript": {
                  "path": "/Inline Script 0",
                  "content": "state.cart = []",
                  "language": "frontend"
                }
              },
              "fieldType": "any",
              "recomputeOnInputChanged": true
            },
            "verticalAlignment": "center",
            "horizontalAlignment": "left"
          }
        },
        {
          "3": {
            "h": 1,
            "w": 1,
            "x": 1,
            "y": 10,
            "max": {
              "h": 100,
              "w": 3
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "12": {
            "h": 1,
            "w": 5,
            "x": 7,
            "y": 18,
            "id": "ar",
            "max": {
              "h": 100,
              "w": 12
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "id": "ar",
          "data": {
            "id": "ar",
            "card": false,
            "type": "buttoncomponent",
            "softWrap": true,
            "customCss": {
              "button": {
                "class": "",
                "style": ""
              }
            },
            "recomputeIds": [
              "bg_6",
              "bg_5"
            ],
            "configuration": {
              "goto": {
                "type": "static",
                "value": "",
                "tooltip": "Go to an url on success if not empty",
                "fieldType": "text"
              },
              "size": {
                "type": "static",
                "value": "xs",
                "fieldType": "select",
                "onlyStatic": true,
                "optionValuesKey": "buttonSizeOptions"
              },
              "color": {
                "type": "static",
                "value": "dark",
                "fieldType": "select",
                "onlyStatic": true,
                "optionValuesKey": "buttonColorOptions"
              },
              "label": {
                "type": "static",
                "value": "Checkout",
                "fieldType": "text"
              },
              "disabled": {
                "expr": "state.cart?.length === 0",
                "type": "eval",
                "fieldType": "boolean"
              },
              "afterIcon": {
                "type": "static",
                "fieldType": "icon-select",
                "onlyStatic": true
              },
              "onSuccess": {
                "selected": "",
                "configuration": {
                  "": {}
                }
              },
              "beforeIcon": {
                "type": "static",
                "value": "ArrowRight",
                "fieldType": "icon-select",
                "onlyStatic": true
              },
              "gotoNewTab": {
                "type": "static",
                "value": true,
                "tooltip": "Go to create a new tab",
                "fieldType": "boolean"
              },
              "fillContainer": {
                "type": "static",
                "value": false,
                "fieldType": "boolean",
                "onlyStatic": true
              },
              "triggerOnAppLoad": {
                "type": "static",
                "value": false,
                "fieldType": "boolean",
                "onlyStatic": true
              }
            },
            "componentInput": {
              "type": "runnable",
              "fields": {
                "auth": {
                  "type": "static",
                  "value": "$res:f/examples/demo_supabase",
                  "format": "resource-supabase",
                  "fieldType": "object"
                },
                "customerId": {
                  "type": "connected",
                  "value": null,
                  "fieldType": "string",
                  "connection": {
                    "path": "result",
                    "componentId": "am"
                  }
                },
                "productIds": {
                  "type": "connected",
                  "value": [],
                  "fieldType": "array",
                  "connection": {
                    "path": "cart",
                    "componentId": "state"
                  }
                }
              },
              "runnable": {
                "name": "checkout",
                "type": "runnableByName",
                "inlineScript": {
                  "path": "/checkout",
                  "schema": {
                    "type": "object",
                    "$schema": "https://json-schema.org/draft/2020-12/schema",
                    "required": [
                      "auth",
                      "customerId",
                      "productIds"
                    ],
                    "properties": {
                      "auth": {
                        "type": "object",
                        "format": "resource-supabase",
                        "default": null,
                        "description": ""
                      },
                      "customerId": {
                        "type": "string",
                        "default": null,
                        "description": ""
                      },
                      "productIds": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "default": null,
                        "description": ""
                      }
                    }
                  },
                  "content": "import { Resource } from \"https://deno.land/x/windmill@v1.70.1/mod.ts\";\nimport {\n  createClient,\n  SupabaseClient,\n} from \"https://esm.sh/@supabase/supabase-js@2.10.0\";\n\nexport async function main(\n  auth: Resource<\"supabase\">,\n  customerId: string,\n  productIds: string[],\n) {\n  const client = createClient(auth.url, auth.key);\n\n  productIds = productIds.filter(Boolean);\n  const { country, city, address } = await getCustomer(client, customerId);\n  const total_price = await getTotalPrice(client, productIds);\n\n  return await client.from(\"orders\").insert({\n    customer_id: customerId,\n    product_ids: productIds,\n    country,\n    city,\n    address,\n    total_price,\n  }).select();\n}\n\nasync function getCustomer(client: SupabaseClient, id: string) {\n  const { data, error } = await client.from(\"customers\").select(\n    \"country, city, address\",\n  ).eq(\"id\", id);\n\n  if (error || !data.length) {\n    throw Error(error?.message || `Couldn't find customer with ID \"${id}\"`);\n  }\n\n  return data[0];\n}\n\nasync function getTotalPrice(client: SupabaseClient, ids: string[]) {\n  const promises = ids.map((id) =>\n    client.from(\"products\").select(\"price\").eq(\"id\", id)\n  );\n  const res = await Promise.all(promises);\n  let total = 0;\n\n  for (let i = 0; i < res.length; i++) {\n    const { data, error } = res[i];\n    if (error || !data.length) {\n      throw Error(\n        error?.message || `Couldn't find product with ID \"${ids[i]}\"`,\n      );\n    }\n    total += data[0].price;\n  }\n\n  return total;\n}",
                  "language": "deno"
                }
              },
              "fieldType": "any",
              "recomputeOnInputChanged": true
            },
            "verticalAlignment": "center",
            "horizontalAlignment": "right"
          }
        }
      ],
      "aw-0": [
        {
          "3": {
            "h": 10,
            "w": 3,
            "x": 0,
            "y": 0,
            "max": {
              "h": 100,
              "w": 3
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "12": {
            "h": 19,
            "w": 12,
            "x": 0,
            "y": 0,
            "id": "aj",
            "max": {
              "h": 100,
              "w": 12
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "id": "aj",
          "data": {
            "id": "aj",
            "card": true,
            "type": "tablecomponent",
            "customCss": {
              "container": {
                "class": "",
                "style": ""
              },
              "tableBody": {
                "class": "",
                "style": ""
              },
              "tableFooter": {
                "class": "",
                "style": ""
              },
              "tableHeader": {
                "class": "",
                "style": ""
              }
            },
            "actionButtons": [],
            "configuration": {
              "search": {
                "type": "static",
                "value": "By Component",
                "fieldType": "select",
                "onlyStatic": true,
                "optionValuesKey": "tableSearchOptions"
              }
            },
            "componentInput": {
              "type": "connected",
              "value": [
                {
                  "id": 1,
                  "age": 42,
                  "name": "A cell with a long name"
                },
                {
                  "id": 2,
                  "age": 84,
                  "name": "A briefer cell"
                }
              ],
              "fieldType": "array",
              "connection": {
                "path": "result.data",
                "componentId": "bg_3"
              },
              "subFieldType": "object"
            }
          }
        }
      ],
      "aw-1": [
        {
          "3": {
            "h": 1,
            "w": 1,
            "x": 0,
            "y": 10,
            "max": {
              "h": 100,
              "w": 3
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "12": {
            "h": 1,
            "w": 12,
            "x": 0,
            "y": 0,
            "id": "ay",
            "max": {
              "h": 100,
              "w": 12
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "id": "ay",
          "data": {
            "id": "ay",
            "card": false,
            "type": "textcomponent",
            "softWrap": false,
            "customCss": {
              "text": {
                "class": "",
                "style": ""
              }
            },
            "configuration": {
              "style": {
                "type": "static",
                "value": "Label",
                "fieldType": "select",
                "onlyStatic": true,
                "optionValuesKey": "textStyleOptions"
              },
              "copyButton": {
                "type": "static",
                "value": false,
                "fieldType": "boolean",
                "onlyStatic": true
              }
            },
            "componentInput": {
              "eval": "Orders of ${aj.selectedRow.first_name} ${aj.selectedRow.last_name} ",
              "type": "template",
              "value": "Hello ${ctx.username}",
              "fieldType": "template"
            },
            "verticalAlignment": "center",
            "horizontalAlignment": "left"
          }
        },
        {
          "3": {
            "h": 10,
            "w": 3,
            "x": 0,
            "y": 0,
            "max": {
              "h": 100,
              "w": 3
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "12": {
            "h": 18,
            "w": 12,
            "x": 0,
            "y": 1,
            "id": "ax",
            "max": {
              "h": 100,
              "w": 12
            },
            "min": {
              "h": 1,
              "w": 1
            },
            "fixed": false,
            "draggable": true,
            "resizable": true,
            "customDragger": false,
            "customResizer": false
          },
          "id": "ax",
          "data": {
            "id": "ax",
            "card": true,
            "type": "tablecomponent",
            "customCss": {
              "container": {
                "class": "",
                "style": ""
              },
              "tableBody": {
                "class": "",
                "style": ""
              },
              "tableFooter": {
                "class": "",
                "style": ""
              },
              "tableHeader": {
                "class": "",
                "style": ""
              }
            },
            "actionButtons": [
              {
                "id": "ax_a",
                "card": false,
                "type": "buttoncomponent",
                "customCss": {
                  "button": {
                    "class": "",
                    "style": ""
                  }
                },
                "configuration": {
                  "goto": {
                    "type": "static",
                    "value": "",
                    "tooltip": "Go to an url on success if not empty",
                    "fieldType": "text"
                  },
                  "size": {
                    "type": "static",
                    "value": "xs",
                    "fieldType": "select",
                    "optionValuesKey": "buttonSizeOptions"
                  },
                  "color": {
                    "type": "static",
                    "value": "dark",
                    "fieldType": "select",
                    "optionValuesKey": "buttonColorOptions"
                  },
                  "label": {
                    "type": "static",
                    "value": "Go to order",
                    "fieldType": "text"
                  },
                  "disabled": {
                    "expr": "false",
                    "type": "eval",
                    "fieldType": "boolean"
                  },
                  "afterIcon": {
                    "type": "static",
                    "fieldType": "icon-select",
                    "onlyStatic": true
                  },
                  "beforeIcon": {
                    "type": "static",
                    "fieldType": "icon-select",
                    "onlyStatic": true
                  },
                  "gotoNewTab": {
                    "type": "static",
                    "value": true,
                    "tooltip": "Go to create a new tab",
                    "fieldType": "boolean"
                  }
                },
                "componentInput": {
                  "type": "runnable",
                  "fields": {},
                  "runnable": {
                    "name": "Inline Script 0",
                    "type": "runnableByName",
                    "inlineScript": {
                      "path": "frontend script",
                      "content": "setTab('a', 1)",
                      "language": "frontend"
                    }
                  },
                  "fieldType": "any",
                  "recomputeOnInputChanged": true
                }
              }
            ],
            "configuration": {
              "search": {
                "type": "static",
                "value": "Disabled",
                "fieldType": "select",
                "onlyStatic": true,
                "optionValuesKey": "tableSearchOptions"
              },
              "pagination": {
                "selected": "",
                "configuration": {
                  "": {}
                }
              }
            },
            "componentInput": {
              "type": "runnable",
              "value": [
                {
                  "id": 1,
                  "age": 42,
                  "name": "A cell with a long name"
                },
                {
                  "id": 2,
                  "age": 84,
                  "name": "A briefer cell"
                }
              ],
              "fields": {
                "auth": {
                  "type": "static",
                  "value": "$res:f/examples/demo_supabase",
                  "format": "resource-supabase",
                  "fieldType": "object"
                },
                "customerId": {
                  "type": "connected",
                  "value": null,
                  "fieldType": "string",
                  "connection": {
                    "path": "selectedRow.id",
                    "componentId": "aj"
                  }
                }
              },
              "runnable": {
                "name": "loadOrderByCustomer",
                "type": "runnableByName",
                "inlineScript": {
                  "path": "/loadOrderByCustomer",
                  "schema": {
                    "type": "object",
                    "$schema": "https://json-schema.org/draft/2020-12/schema",
                    "required": [
                      "auth",
                      "customerId"
                    ],
                    "properties": {
                      "auth": {
                        "type": "object",
                        "format": "resource-supabase",
                        "default": null,
                        "description": ""
                      },
                      "customerId": {
                        "type": "string",
                        "default": null,
                        "description": ""
                      }
                    }
                  },
                  "content": "import { Resource } from \"https://deno.land/x/windmill@v1.70.1/mod.ts\";\nimport { createClient } from \"https://esm.sh/@supabase/supabase-js@2\";\n\nexport async function main(\n  auth: Resource<\"supabase\">,\n  customerId: string\n) {\n  const client = createClient(auth.url, auth.key);\n  let query = client.from('orders').select().eq(\"customer_id\", customerId)\n\n  const response = await query;\n\n  return response.data.map(x => ({ id: x.id }))\n\n}\n",
                  "language": "deno"
                }
              },
              "fieldType": "array",
              "subFieldType": "object",
              "recomputeOnInputChanged": true
            }
          }
        }
      ]
    },
    "fullscreen": true,
    "hiddenInlineScripts": [
      {
        "name": "loadProducts",
        "fields": {
          "auth": {
            "type": "static",
            "value": "$res:f/examples/demo_supabase",
            "format": "resource-supabase",
            "fieldType": "object"
          },
          "head": {
            "type": "static",
            "value": null,
            "fieldType": "boolean"
          },
          "count": {
            "type": "static",
            "value": null,
            "fieldType": "string"
          },
          "limit": {
            "type": "static",
            "value": null,
            "fieldType": "object"
          },
          "order": {
            "type": "static",
            "value": null,
            "fieldType": "object"
          },
          "table": {
            "type": "static",
            "value": "products",
            "fieldType": "string"
          },
          "filter": {
            "type": "static",
            "value": null,
            "fieldType": "object"
          },
          "columns": {
            "type": "static",
            "value": null,
            "fieldType": "string"
          }
        },
        "autoRefresh": true,
        "inlineScript": {
          "path": "/loadProducts",
          "schema": {
            "type": "object",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "required": [
              "auth",
              "table"
            ],
            "properties": {
              "auth": {
                "type": "object",
                "format": "resource-supabase",
                "default": null,
                "description": ""
              },
              "head": {
                "type": "boolean",
                "default": null,
                "description": ""
              },
              "count": {
                "enum": [
                  "exact",
                  "planned",
                  "estimated"
                ],
                "type": "string",
                "default": null,
                "description": ""
              },
              "limit": {
                "type": "object",
                "default": null,
                "properties": {
                  "count": {
                    "type": "number",
                    "description": ""
                  },
                  "foreignTable": {
                    "type": "string",
                    "description": ""
                  }
                },
                "description": ""
              },
              "order": {
                "type": "object",
                "default": null,
                "properties": {
                  "column": {
                    "type": "string",
                    "description": ""
                  },
                  "ascending": {
                    "type": "boolean",
                    "description": ""
                  },
                  "nullsFirst": {
                    "type": "boolean",
                    "description": ""
                  },
                  "foreignTable": {
                    "type": "string",
                    "description": ""
                  }
                },
                "description": ""
              },
              "table": {
                "type": "string",
                "default": null,
                "description": ""
              },
              "filter": {
                "type": "object",
                "default": null,
                "properties": {
                  "value": {
                    "type": "object",
                    "description": ""
                  },
                  "column": {
                    "type": "string",
                    "description": ""
                  },
                  "operator": {
                    "type": "string",
                    "description": ""
                  }
                },
                "description": ""
              },
              "columns": {
                "type": "string",
                "default": null,
                "description": ""
              }
            }
          },
          "content": "import { Resource } from \"https://deno.land/x/windmill@v1.70.1/mod.ts\";\nimport { createClient } from \"https://esm.sh/@supabase/supabase-js@2\";\n\n/**\n * @param count Count algorithm to use to count rows in the table or view.\n * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the hood.\n * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres statistics under the hood.\n * `\"estimated\"`: Uses exact count for low numbers and planned count for high numbers.\n *\n * @param head When set to `true`, `data` will not be returned.\n * Useful if you only need the count.\n * \n * @param filter Learn more at https://supabase.com/docs/reference/javascript/filter\n * \n * @param order Learn more at https://supabase.com/docs/reference/javascript/order\n * \n * @param limit Learn more at https://supabase.com/docs/reference/javascript/limit\n */\nexport async function main(\n  auth: Resource<\"supabase\">,\n  table: string,\n  columns?: string,\n  count?: \"exact\" | \"planned\" | \"estimated\",\n  head?: boolean,\n  filter?: {\n    column: string;\n    operator: string;\n    value: any;\n  },\n  order?: {\n    column: string;\n    foreignTable: string;\n    ascending?: boolean;\n    nullsFirst?: boolean;\n  },\n  limit?: {\n    count: number;\n    foreignTable?: string;\n  },\n) {\n  const client = createClient(auth.url, auth.key);\n  const options = (head || count) ? { head, count } : undefined;\n  let query = client.from(table).select(columns || undefined, options);\n  if (filter?.column) {\n    query = query.filter(filter.column, filter.operator, filter.value);\n  }\n  if (order?.column) {\n    const { column, ...options } = order;\n    query = query.order(column, options);\n  }\n  if (limit?.count) {\n    const { count, foreignTable } = limit;\n    query = query.limit(count, foreignTable ? { foreignTable } : undefined);\n  }\n\n  return await query;\n}\n",
          "language": "deno"
        },
        "recomputeOnInputChanged": true
      },
      {
        "name": "getProductImageUrl",
        "fields": {
          "products": {
            "type": "connected",
            "value": null,
            "fieldType": "array",
            "connection": {
              "path": "result.data",
              "componentId": "bg_0"
            }
          },
          "productId": {
            "type": "connected",
            "value": null,
            "fieldType": "string",
            "connection": {
              "path": "selectedRow.id",
              "componentId": "j"
            }
          }
        },
        "autoRefresh": true,
        "inlineScript": {
          "path": "/getProductImageUrl",
          "schema": {
            "type": "object",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "required": [
              "productId",
              "products"
            ],
            "properties": {
              "products": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "default": null,
                "description": ""
              },
              "productId": {
                "type": "string",
                "default": null,
                "description": ""
              }
            }
          },
          "content": "export async function main(productId: string, products: any[]) {\n  return products.find((p) => p.id === productId).image_url;\n}\n",
          "language": "deno"
        },
        "recomputeOnInputChanged": true
      },
      {
        "name": "loadOrders",
        "fields": {
          "auth": {
            "type": "static",
            "value": "$res:f/examples/demo_supabase",
            "format": "resource-supabase",
            "fieldType": "object"
          },
          "head": {
            "type": "static",
            "value": null,
            "fieldType": "boolean"
          },
          "count": {
            "type": "static",
            "value": null,
            "fieldType": "string"
          },
          "limit": {
            "type": "static",
            "value": null,
            "fieldType": "object"
          },
          "order": {
            "type": "static",
            "value": null,
            "fieldType": "object"
          },
          "table": {
            "type": "static",
            "value": "orders",
            "fieldType": "string"
          },
          "filter": {
            "type": "static",
            "value": null,
            "fieldType": "object"
          },
          "columns": {
            "type": "static",
            "value": null,
            "fieldType": "string"
          }
        },
        "autoRefresh": true,
        "inlineScript": {
          "path": "/loadOrders",
          "schema": {
            "type": "object",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "required": [
              "auth",
              "table"
            ],
            "properties": {
              "auth": {
                "type": "object",
                "format": "resource-supabase",
                "default": null
              },
              "head": {
                "type": "boolean",
                "default": null
              },
              "count": {
                "enum": [
                  "exact",
                  "planned",
                  "estimated"
                ],
                "type": "string",
                "default": null
              },
              "limit": {
                "type": "object",
                "default": null,
                "properties": {
                  "count": {
                    "type": "number"
                  },
                  "foreignTable": {
                    "type": "string"
                  }
                }
              },
              "order": {
                "type": "object",
                "default": null,
                "properties": {
                  "column": {
                    "type": "string"
                  },
                  "ascending": {
                    "type": "boolean"
                  },
                  "nullsFirst": {
                    "type": "boolean"
                  },
                  "foreignTable": {
                    "type": "string"
                  }
                }
              },
              "table": {
                "type": "string",
                "default": null
              },
              "filter": {
                "type": "object",
                "default": null,
                "properties": {
                  "value": {
                    "type": "object"
                  },
                  "column": {
                    "type": "string"
                  },
                  "operator": {
                    "type": "string"
                  }
                }
              },
              "columns": {
                "type": "string",
                "default": null
              }
            }
          },
          "content": "import { Resource } from \"https://deno.land/x/windmill@v1.70.1/mod.ts\";\nimport { createClient } from \"https://esm.sh/@supabase/supabase-js@2\";\n\n\n\n\n/**\n * @param count Count algorithm to use to count rows in the table or view.\n * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the hood.\n * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres statistics under the hood.\n * `\"estimated\"`: Uses exact count for low numbers and planned count for high numbers.\n *\n * @param head When set to `true`, `data` will not be returned.\n * Useful if you only need the count.\n * \n * @param filter Learn more at https://supabase.com/docs/reference/javascript/filter\n * \n * @param order Learn more at https://supabase.com/docs/reference/javascript/order\n * \n * @param limit Learn more at https://supabase.com/docs/reference/javascript/limit\n */\nexport async function main(\n  auth: Resource<\"supabase\">,\n  table: string,\n  columns?: string,\n  count?: \"exact\" | \"planned\" | \"estimated\",\n  head?: boolean,\n  filter?: {\n    column: string;\n    operator: string;\n    value: any;\n  },\n  order?: {\n    column: string;\n    foreignTable: string;\n    ascending?: boolean;\n    nullsFirst?: boolean;\n  },\n  limit?: {\n    count: number;\n    foreignTable?: string;\n  },\n) {\n  const client = createClient(auth.url, auth.key);\n  const options = (head || count) ? { head, count } : undefined;\n  let query = client.from(table).select(columns || undefined, options);\n  if (filter?.column) {\n    query = query.filter(filter.column, filter.operator, filter.value);\n  }\n  if (order?.column) {\n    const { column, ...options } = order;\n    query = query.order(column, options);\n  }\n  if (limit?.count) {\n    const { count, foreignTable } = limit;\n    query = query.limit(count, foreignTable ? { foreignTable } : undefined);\n  }\n\n  return await query;\n}\n",
          "language": "deno"
        },
        "recomputeOnInputChanged": true
      },
      {
        "name": "loadCustomers",
        "fields": {
          "auth": {
            "type": "static",
            "value": "$res:f/examples/demo_supabase",
            "format": "resource-supabase",
            "fieldType": "object"
          },
          "head": {
            "type": "static",
            "value": null,
            "fieldType": "boolean"
          },
          "count": {
            "type": "static",
            "value": null,
            "fieldType": "string"
          },
          "limit": {
            "type": "static",
            "value": null,
            "fieldType": "object"
          },
          "order": {
            "type": "static",
            "value": null,
            "fieldType": "object"
          },
          "table": {
            "type": "static",
            "value": "customers",
            "fieldType": "string"
          },
          "filter": {
            "type": "static",
            "value": null,
            "fieldType": "object"
          },
          "columns": {
            "type": "static",
            "value": null,
            "fieldType": "string"
          }
        },
        "autoRefresh": true,
        "inlineScript": {
          "path": "/loadCustomers",
          "schema": {
            "type": "object",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "required": [
              "auth",
              "table"
            ],
            "properties": {
              "auth": {
                "type": "object",
                "format": "resource-supabase",
                "default": null,
                "description": ""
              },
              "head": {
                "type": "boolean",
                "default": null,
                "description": ""
              },
              "count": {
                "enum": [
                  "exact",
                  "planned",
                  "estimated"
                ],
                "type": "string",
                "default": null,
                "description": ""
              },
              "limit": {
                "type": "object",
                "default": null,
                "properties": {
                  "count": {
                    "type": "number",
                    "description": ""
                  },
                  "foreignTable": {
                    "type": "string",
                    "description": ""
                  }
                },
                "description": ""
              },
              "order": {
                "type": "object",
                "default": null,
                "properties": {
                  "column": {
                    "type": "string",
                    "description": ""
                  },
                  "ascending": {
                    "type": "boolean",
                    "description": ""
                  },
                  "nullsFirst": {
                    "type": "boolean",
                    "description": ""
                  },
                  "foreignTable": {
                    "type": "string",
                    "description": ""
                  }
                },
                "description": ""
              },
              "table": {
                "type": "string",
                "default": null,
                "description": ""
              },
              "filter": {
                "type": "object",
                "default": null,
                "properties": {
                  "value": {
                    "type": "object",
                    "description": ""
                  },
                  "column": {
                    "type": "string",
                    "description": ""
                  },
                  "operator": {
                    "type": "string",
                    "description": ""
                  }
                },
                "description": ""
              },
              "columns": {
                "type": "string",
                "default": null,
                "description": ""
              }
            }
          },
          "content": "import { Resource } from \"https://deno.land/x/windmill@v1.70.1/mod.ts\";\nimport { createClient } from \"https://esm.sh/@supabase/supabase-js@2\";\n\n\n/**\n * @param count Count algorithm to use to count rows in the table or view.\n * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the hood.\n * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres statistics under the hood.\n * `\"estimated\"`: Uses exact count for low numbers and planned count for high numbers.\n *\n * @param head When set to `true`, `data` will not be returned.\n * Useful if you only need the count.\n * \n * @param filter Learn more at https://supabase.com/docs/reference/javascript/filter\n * \n * @param order Learn more at https://supabase.com/docs/reference/javascript/order\n * \n * @param limit Learn more at https://supabase.com/docs/reference/javascript/limit\n */\nexport async function main(\n  auth: Resource<\"supabase\">,\n  table: string,\n  columns?: string,\n  count?: \"exact\" | \"planned\" | \"estimated\",\n  head?: boolean,\n  filter?: {\n    column: string;\n    operator: string;\n    value: any;\n  },\n  order?: {\n    column: string;\n    foreignTable: string;\n    ascending?: boolean;\n    nullsFirst?: boolean;\n  },\n  limit?: {\n    count: number;\n    foreignTable?: string;\n  },\n) {\n  const client = createClient(auth.url, auth.key);\n  const options = (head || count) ? { head, count } : undefined;\n  let query = client.from(table).select(columns || undefined, options);\n  if (filter?.column) {\n    query = query.filter(filter.column, filter.operator, filter.value);\n  }\n  if (order?.column) {\n    const { column, ...options } = order;\n    query = query.order(column, options);\n  }\n  if (limit?.count) {\n    const { count, foreignTable } = limit;\n    query = query.limit(count, foreignTable ? { foreignTable } : undefined);\n  }\n\n  return await query;\n}\n",
          "language": "deno"
        },
        "recomputeOnInputChanged": true
      },
      {
        "name": "listUser",
        "fields": {
          "users": {
            "type": "connected",
            "value": null,
            "fieldType": "array",
            "connection": {
              "path": "result.data",
              "componentId": "bg_3"
            }
          }
        },
        "autoRefresh": true,
        "inlineScript": {
          "path": "/listUser",
          "schema": {
            "type": "object",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "required": [
              "users"
            ],
            "properties": {
              "users": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "default": null,
                "description": ""
              }
            }
          },
          "content": "// import * as wmill from \"https://deno.land/x/windmill@v1.72.0/mod.ts\"\n\nexport async function main(users: any[]) {\n  return users.map((u) => ({\n    label: `${u.first_name}  ${u.last_name}`,\n    value: u.id\n  }))\n}\n",
          "language": "deno"
        },
        "recomputeOnInputChanged": true
      },
      {
        "name": "deleteCart",
        "fields": {},
        "autoRefresh": false,
        "inlineScript": {
          "path": "/deleteCart",
          "content": "state.cart = []",
          "language": "frontend"
        },
        "recomputeOnInputChanged": true
      }
    ],
    "unusedInlineScripts": []
  },
  "policy": {
    "on_behalf_of": "u/henri",
    "triggerables": {
      "rawscript/0fc9afb3c876f0393da742d9e43c29bbd011397034da32caa19cdb7f4e069b4c": {
        "auth": "$res:f/examples/demo_supabase",
        "head": null,
        "count": null,
        "limit": null,
        "order": null,
        "table": "orders",
        "filter": null,
        "columns": null
      },
      "rawscript/1f7dc8e50201accc47245ae1f132d1b87f121ee9b3efe63ec86b5acf11023a44": {
        "auth": "$res:f/examples/demo_supabase"
      },
      "rawscript/2238f7d181f880a1b25230c793a932ef5b5b3b344214525ad02fdef6b69dbcdb": {},
      "rawscript/287e1830e0eb847eb3e34e58a108a2ecd5be63c913ecbb5e5b17a5c847c10e70": {},
      "rawscript/2b333c674ec5a18caec9d0a59a2b1afb78df48ad8a11576d3ecacd13502d86a2": {
        "auth": "$res:f/examples/demo_supabase",
        "head": null,
        "count": null,
        "limit": null,
        "order": null,
        "table": "products",
        "filter": null,
        "columns": null
      },
      "rawscript/301478c282cd0dfe4633a60267fd25a6f317cdf1ccac5145ed2b4d34a4d83936": {},
      "rawscript/46f722936f8afa7858453ed0c4cb21e7def702d455f5f1957d3b9a366da2421e": {},
      "rawscript/4aa1edb0ca2e107d16b060709218c6a2e4028e8b8f25be3a42d1087cd9a37b17": {},
      "rawscript/4daeb0c09a282117d2aee2db4a89ac2f18c51d9d51477e78ac3df086ffd9d962": {
        "auth": "$res:f/examples/demo_supabase",
        "head": null,
        "count": null,
        "limit": null,
        "order": null,
        "table": "customers",
        "filter": null,
        "columns": null
      },
      "rawscript/79254a6b92a44dbd31b4e38c4a33b983997ed33f353275581a3cc97aaa64599c": {},
      "rawscript/7aa4c201af40e54bb24a1a3c4ff46c63431dad32b4bd28fc5039bf2e823b42b7": {
        "auth": "$res:u/henri/wm_showcases_supabase"
      },
      "rawscript/8bbe6a0146ba935a6ce17ea427a8391452345ce6a63c39589ca0979a65de7ed0": {},
      "rawscript/8e456100f65e6a4a135a74532f63d52c12d46cde68a8a4e965c1937beb24ee40": {},
      "rawscript/9a3f132bdfe05c1fb51c7e77e798100b76ed33cc801d82f24198057562a248e8": {},
      "rawscript/b45a10d5c6ba38f72c716b43ad04e0d6c3eaac672148b5bcfc75b593b25e6a54": {},
      "rawscript/be54fbbaee55accca6fb7f362e19e82d36536d314c0f784c66e82a48e56a9cb2": {
        "auth": "$res:f/examples/demo_supabase"
      },
      "rawscript/c2d55b8bd906c097307308c26c3962a0cbe8cc96343b3dfb6b8d7f58f9f9972e": {},
      "rawscript/c9cb4c4f884d998812923cdfb7ee1a20ff6e2b20068a329589e5f4184fe08350": {},
      "rawscript/cfddc2cdc871fc011b37a6aebda250d0cf05b996829fdd1fa741490b668d4448": {
        "auth": "$res:f/examples/demo_supabase"
      },
      "rawscript/fa14df9c0bc7be852550ebe01996be628ccf535c6e8ac6f57dae2f45518f6e9a": {}
    },
    "execution_mode": "publisher",
    "on_behalf_of_email": "henri@windmill.dev"
  },
  "summary": "Back-Office of an E-Commerce Business"
}