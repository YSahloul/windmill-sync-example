summary: >-
  Whenever an HackerNews message contains a mention, publish it to Slack with
  sentiment analysed
description: >-
  We watch all new items on HackerNews and filter those that match one of the
  parametrized mention.

   For each of them, we attach sentiment analysis through NLTK and then publish it to slack.
value:
  modules:
    - id: a
      summary: Watch for new message with mentions on HackerNews
      value:
        type: rawscript
        content: >-
          !inline
          watch_for_new_message_with_mentions_on_hackernews.inline_script.ts
        input_transforms:
          mentions:
            type: javascript
            expr: previous_result.mentions
        language: deno
        lock: ''
      input_transforms: {}
      stop_after_if:
        expr: result.length == 0
        skip_if_stopped: true
    - id: b
      value:
        type: forloopflow
        iterator:
          type: javascript
          expr: result
        modules:
          - id: c
            summary: Analyse sentiment with nltk
            value:
              type: rawscript
              content: '!inline analyse_sentiment_with_nltk.inline_script.py'
              input_transforms:
                text:
                  type: javascript
                  expr: '`${flow_input.iter.value.text}`'
              language: python3
            input_transforms: {}
          - id: d
            summary: Send message to slack
            value:
              type: script
              input_transforms:
                channel:
                  type: javascript
                  expr: '`${flow_input.channel}`'
                slack:
                  type: javascript
                  expr: flow_input.slack
                text:
                  type: javascript
                  expr: >-
                    `${flow_input.iter.value.id} by ${flow_input.iter.value.by}:
                    \n ${flow_input.iter.value.text}:

                    ${JSON.stringify(previous_result)}`
              path: hub/111/slack/send_message_to_channel
            input_transforms: {}
        parallel: false
        skip_failures: true
      input_transforms: {}
schema:
  $schema: 'https://json-schema.org/draft/2020-12/schema'
  type: object
  properties:
    channel:
      type: string
      default: demo
      format: ''
      description: slack channel
    mentions:
      type: array
      default:
        - windmill
        - unicorn
      format: ''
      description: The list of mentions to watch for
      items:
        type: string
    slack:
      type: object
      format: resource-slack
      description: OAuth slack credentials
  required:
    - mentions
    - channel
